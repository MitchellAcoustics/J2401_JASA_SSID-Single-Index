<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving
and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
  <front>
    <article-meta>
      <title-group>
        <article-title>SPI - Defining bespoke and archetypal context-dependent
Soundscape Perception Indices</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author" corresp="yes">
          <name>
            <surname>Mitchell</surname>
            <given-names>Andrew</given-names>
          </name>
          <string-name>Andrew Mitchell</string-name>
          <email>andrew.mitchell.18@ucl.ac.uk</email>
          <xref ref-type="aff" rid="ucl-iede">a</xref>
          <xref ref-type="corresp" rid="cor-1">*</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Aletta</surname>
            <given-names>Francesco</given-names>
          </name>
          <string-name>Francesco Aletta</string-name>
          <email>f.aletta@ucl.ac.uk</email>
          <xref ref-type="aff" rid="ucl-iede">a</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Oberman</surname>
            <given-names>Tin</given-names>
          </name>
          <string-name>Tin Oberman</string-name>
          <email>t.oberman@ucl.ac.uk</email>
          <xref ref-type="aff" rid="ucl-iede">a</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Kang</surname>
            <given-names>Jian</given-names>
          </name>
          <string-name>Jian Kang</string-name>
          <email>j.kang@ucl.ac.uk</email>
        </contrib>
      </contrib-group>
      <aff id="ucl-iede">
        <institution content-type="dept">Institute for Environmental Design
&amp; Engineering</institution>
        <institution-wrap>
          <institution>University College London</institution>
        </institution-wrap>
      </aff>
      <author-notes>
        <corresp id="cor-1">andrew.mitchell.18@ucl.ac.uk</corresp>
      </author-notes>
      <history/>
      <abstract>
        <p>The soundscape approach provides a basis for considering the holistic
perception of sound environments, in context. While steady advancements
have been made in methods for assessment and analysis, a gap exists for
comparing soundscapes and quantifying improvements in the
multi-dimensional perception of a soundscape. To this end, there is a
need for the creation of single value indices to compare soundscape
quality which incorporate context, aural diversity, and specific design
goals for a given application. Just as a variety of decibel-based
indices have been developed for various purposes (e.g. LAeq, LCeq, L90,
Lden, etc.), the soundscape approach requires the ability to create
novel indices for different uses, but which share a common language and
understanding. We therefore propose a unified framework for creating
both bespoke and standardised single index measures of soundscape
perception based on the soundscape circumplex model, allowing for new
metrics to be defined in the future. The implementation of this
framework is demonstrated through the creation of a public spaced
typology-based index using data collected under the SSID Protocol, which
was designed specifically for the purpose of defining soundscape
indices. Indices developed under this framework can enable a broader and
more efficient application of the soundscape approach.</p>
      </abstract>
      <kwd-group kwd-group-type="author">
        <kwd>keyword1</kwd>
        <kwd>keyword2</kwd>
      </kwd-group>
    </article-meta>
  </front>
  <body>
    <sec id="introduction">
      <title>Introduction</title>
      <p>The EU Green Paper on Future Noise Policy indicates that 80 million
  EU citizens are suffering from unacceptable environmental noise levels
  , according to the WHO recommendation
  (<xref alt="Berglund, Lindvall, and Schwela 1999" rid="ref-Berglund1999Guidelines" ref-type="bibr">Berglund,
  Lindvall, and Schwela 1999</xref>) and the social cost of transport
  noise is 0.2-2% of total GDP. The publication of the EU Directive
  Relating to the Assessment and Management of Environmental Noise (END)
  (<xref alt="European Union 2002" rid="ref-EuropeanUnion2002Directive" ref-type="bibr">European
  Union 2002</xref>) in 2002 has led to major actions across Europe,
  with reducing noise levels as the focus, for which billions of Euros
  are being spent. However, it is widely recognised that only reducing
  sound level is not always feasible or cost-effective, and more
  importantly, with only ~30% of environmental noise annoyance depending
  on facets of parameters such as acoustic energy
  (<xref alt="Guski 1997" rid="ref-Guski1997Psychological" ref-type="bibr">Guski
  1997</xref>), sound level reduction will not necessarily lead to
  improved quality of life.</p>
      <p>Soundscape creation, separate from noise control engineering, is
  about the relationships between human physiology, perception, the
  sound environment, and its social/cultural context
  (<xref alt="Kang 2006" rid="ref-Kang2006Urban" ref-type="bibr">Kang
  2006</xref>). Soundscape research represents a paradigm shift in that
  it combines physical, social, and psychological approaches and
  considers environmental sounds as a ‘resource’ rather than ‘waste’
  (<xref alt="Kang and Schulte-Fortkamp 2016" rid="ref-Kang2016Soundscape" ref-type="bibr">Kang
  and Schulte-Fortkamp 2016</xref>) relating to perceptual constructs
  rather than just physical phenomena. However, the current research is
  still at the stage of describing and identifying the problems and
  tends to be fragmented and focussed on only special cases
  e.g. subjective evaluations of soundscapes for residential areas
  (<xref alt="Schulte-Fortkamp and Kang 2013" rid="ref-SchulteFortkamp2013Introduction" ref-type="bibr">Schulte-Fortkamp
  and Kang 2013</xref>). In the movement from noise control to
  soundscape creation
  (<xref alt="Aletta and Kang 2015" rid="ref-Aletta2015Soundscape" ref-type="bibr">Aletta
  and Kang 2015</xref>), a vital step is the standardisation of methods
  to assess soundscape quality.</p>
      <p>The Decibel (dB) is the earliest and most commonly used scientific
  index measuring sound level. To represent the overall level of sound
  with a single value on one scale, as the Decibel index does, is often
  desirable. For this purpose, a number of different values representing
  sounds at various frequencies must be combined. Several frequency
  weighting networks have been developed since the 1930s, considering
  typical human responses to sound based on equal-loudness-level
  contours
  (<xref alt="viii?" rid="ref-viii" ref-type="bibr"><bold>viii?</bold></xref>)
  and, among them, the A-weighting network, with resultant decibel
  values called dBA, has been commonly used in almost all the
  national/international regulations
  (<xref alt="ix?" rid="ref-ix" ref-type="bibr"><bold>ix?</bold></xref>).
  However, there have been numerous criticisms on its effectiveness
  (<xref alt="x?" rid="ref-x" ref-type="bibr"><bold>x?</bold></xref>) as
  the correlations between dBA and perceived sound quality (e.g. noise
  annoyance) are often low
  (<xref alt="xi?" rid="ref-xi" ref-type="bibr"><bold>xi?</bold></xref>).</p>
      <p>Another set of indices is psychoacoustic magnitudes, including
  loudness, fluctuation strength or roughness, sharpness, and pitch
  strength, development with sound quality studies of industrial
  products since the 1980’s
  (<xref alt="xii?" rid="ref-xii" ref-type="bibr"><bold>xii?</bold></xref>).
  These emerged when it was conceived that acoustic emissions had
  further characteristics than just level
  (<xref alt="ciii?" rid="ref-ciii" ref-type="bibr"><bold>ciii?</bold></xref>).
  But while psychoacoustic magnitudes have been proved to be successful
  for the assessment of product sound quality
  (<xref alt="xiv?" rid="ref-xiv" ref-type="bibr"><bold>xiv?</bold></xref>),
  in the field of environmental acoustics, their applicability has been
  limited
  (<xref alt="xv?" rid="ref-xv" ref-type="bibr"><bold>xv?</bold></xref>),
  since a significant feature of environmental acoustics is that there
  are multiple/dynamic sound sources.</p>
      <p>Attendant with the transition from a noise reduction to soundscape
  paradigm is an urgent need for developing appropriate indices for
  soundscape, rather than continuously using dBA
  (<xref alt="xvi?" rid="ref-xvi" ref-type="bibr"><bold>xvi?</bold></xref>).</p>
      <sec id="the-need-for-soundscape-indices">
        <title>The need for Soundscape Indices</title>
        <p>Soundscape studies strive to understand the perception of a sound
    environment, in context, including acoustic, (non-acoustic)
    environmental, contextual, and personal factors. These factors
    combine together to form a person’s soundscape perception in complex
    interacting ways
    (<xref alt="Berglund and Nilsson 2006" rid="ref-Berglund2006Soundscape" ref-type="bibr">Berglund
    and Nilsson 2006</xref>). Humans and soundscapes have a dynamic
    bidirectional relationship - while humans and their behaviour
    directly influence their soundscape, humans and their behaviour are
    in turn influenced by their soundscape
    (<xref alt="Erfanian et al. 2019" rid="ref-Erfanian2019Psychophysiological" ref-type="bibr">Erfanian
    et al. 2019</xref>).</p>
        <p>When applied to urban sound and specifically to noise pollution,
    the soundscape approach introduces three key considerations beyond
    traditional noise control methods:</p>
        <list list-type="order">
          <list-item>
            <p>considering all aspects of the environment which may
        influence perception, not just the sound level and spectral
        content;</p>
          </list-item>
          <list-item>
            <p>an increased and integrated consideration of the varying
        impacts which different sound sources and sonic characteristics
        have on perception; and</p>
          </list-item>
          <list-item>
            <p>a consideration of both the positive and negative dimensions
        of soundscape perception.</p>
          </list-item>
        </list>
        <p>This approach can enable better outcomes by identifying positive
    soundscapes (in line with the END’s mandate to `preserve
    environmental noise quality where it is good’
    (<xref alt="European Union 2002" rid="ref-EuropeanUnion2002Directive" ref-type="bibr">European
    Union 2002</xref>)), better identify specific sources of noise which
    impact soundscape quality and pinpoint the characteristics which may
    need to be decreased, and illuminate alternative methods which could
    be introduced to improve a soundscape where a reduction of noise is
    impractical
    (<xref alt="Fiebig 2018" rid="ref-Fiebig2018Does" ref-type="bibr">Fiebig
    2018</xref>;
    <xref alt="Kang and Aletta 2018" rid="ref-Kang2018Impact" ref-type="bibr">Kang
    and Aletta 2018</xref>). These can all lead to more opportunities to
    truly improve a space by identifying the causes of positive
    soundscapes, while also potentially decreasing the costs of noise
    mitigation by offering more targeted techniques and alternative
    approaches.</p>
        <p>The traditional focus on noise levels alone fails to capture the
    complexity of soundscape perception, which encompasses a multitude
    of factors beyond mere sound pressure levels. Factors such as the
    presence of natural or human-made sounds, their temporal patterns,
    and the overall contextual meaning ascribed to these sounds all
    contribute to the holistic perception of a soundscape. Consequently,
    there is a pressing need for the development of robust indices that
    can encapsulate this multi-dimensional nature of soundscape
    perception, enabling comparative evaluations and informing targeted
    interventions to enhance the overall quality of acoustic
    environments
    (<xref alt="Chen2024Interventions?" rid="ref-Chen2024Interventions" ref-type="bibr"><bold>Chen2024Interventions?</bold></xref>).</p>
        <p>Across both the visual and the auditory domain, research has
    suggested that a disconnect exists between the physical metrics used
    to describe urban environments and how they are perceived
    (<xref alt="Kruize et al. 2019" rid="ref-Kruize2019Exploring" ref-type="bibr">Kruize
    et al. 2019</xref>;
    <xref alt="Yang and Kang 2005" rid="ref-Yang2005Acoustic" ref-type="bibr">Yang
    and Kang 2005</xref>). In addition, this disconnect can be extended
    further into how these environments influence the health and
    well-being of their users. To gain a better understanding of these
    spaces and their immpacts on people who work and live in cities, we
    must create assessment methods and metrics which go beyond merely
    characterising the physical environment and instead translate
    through the user’s perception
    (<xref alt="Mitchell 2022" rid="ref-Mitchell2022Predictive" ref-type="bibr">Mitchell
    2022</xref>).</p>
      </sec>
      <sec id="note-on-terminology">
        <title>Note on Terminology</title>
        <p>Before delving into the core discussion, it is crucial to
    establish a clear understanding of the terminology employed in the
    realm of soundscape evaluation.</p>
        <p>The soundscape community is undergoing a period of increased
    methodological standardization in order to better coordinate and
    communicate the findings of the field. This process has resulted in
    many operational tools designed to assess and understand how sound
    environments are perceived and apply this to shape modern noise
    control engineering approaches. Important topics which have been
    identified throughout this process are soundscape ‘descriptors’,
    ‘indicators’, and ‘indices’. Aletta, Kang, and Axelsson
    (<xref alt="2016" rid="ref-Aletta2016Soundscape" ref-type="bibr">2016</xref>)
    defined soundscape descriptors as ‘measures of how people perceive
    the acoustic environment’ and soundscape indicators as ‘measures
    used to predict the value of a soundscape descriptor’. Soundscape
    indices can then be defined as ‘single value scales derived from
    either descriptors or indicators that allow for comparison across
    soundscapes’
    (<xref alt="Kang et al. 2019" rid="ref-Kang2019Towards" ref-type="bibr">Kang
    et al. 2019</xref>).</p>
        <p>Soundscape indicators refer to measurable aspects or attributes
    of a soundscape, such as loudness, tonal characteristics, or
    spectral content, which can be quantified through objective
    measurements or signal processing techniques. In contrast,
    soundscape descriptors are qualitative representations of the
    perceived characteristics of a soundscape, often derived from
    listener evaluations, subjective assessments, or semantic
    differential scales
    (<xref alt="ISO/TS 12913-2:2018 2018" rid="ref-ISO12913Part2" ref-type="bibr">ISO/TS
    12913-2:2018 2018</xref>).</p>
        <p>Indices, the primary focus of this article, are single numerical
    values that combine multiple indicators or descriptors to provide a
    comprehensive representation of the overall soundscape perception.
    These indices serve as powerful tools for quantifying and comparing
    soundscapes, enabling decision-makers and stakeholders to assess the
    impact of interventions, monitor changes over time, and prioritize
    areas for improvement.</p>
        <p>(<xref alt="Grinfeder et al. 2022" rid="ref-Grinfeder2022What" ref-type="bibr">Grinfeder
    et al. 2022</xref>)</p>
      </sec>
      <sec id="existing-soundscape-indices">
        <title>Existing ‘Soundscape Indices’</title>
        <p>While the field of soundscape research has witnessed substantial
    progress, the development of standardized indices for evaluating and
    comparing soundscapes across diverse contexts has been relatively
    limited. Existing indices can be broadly seen as arising from two
    domains: soundscape ecology and soundscape perception. It is worth
    reviewing these indices to highlight how the framework proposed here
    is fundamentally different in both concept and aim.</p>
        <sec id="soundscape-ecology">
          <title>Soundscape Ecology</title>
          <p>Within the realm of soundscape ecology, indices such as the
      Acoustic Diversity Index (ADI) and Frequency-dependenty Acoustic
      Diversity Index (FADI)
      (<xref alt="Xu et al. 2023" rid="ref-Xu2023frequency" ref-type="bibr">Xu
      et al. 2023</xref>) have been developed to quantify the diversity
      and complexity of acoustic signals within a given soundscape.
      These indices are particularly useful in ecological studies,
      providing insights into the richness and diversity of biophonic
      (natural) and anthrophonic (human-made) sound sources.</p>
          <p>
            <bold>
              <italic>Add additional information on ADI, FADI, NDSI,
      etc.</italic>
            </bold>
          </p>
          <p>However, while these indices contribute valuable insights into
      the ecological aspects of soundscapes, they do not directly
      address the perceptual dimensions that are central to the
      soundscape approach
      (<xref alt="Schulte-Fortkamp et al. 2023" rid="ref-SchulteFortkamp2023Soundscapes" ref-type="bibr">Schulte-Fortkamp
      et al. 2023</xref>). The multi-dimensional nature of soundscape
      perception, encompassing factors such as pleasantness,
      eventfulness, and familiarity, necessitates a more comprehensive
      and context-sensitive approach.</p>
        </sec>
        <sec id="soundscape-perception">
          <title>Soundscape Perception</title>
          <p>In the domain of soundscape perception, the Green Soundscape
      Index (GSI)
      (<xref alt="Kogan et al. 2018" rid="ref-Kogan2018Green" ref-type="bibr">Kogan
      et al. 2018</xref>) has emerged as a notable attempt to quantify
      the perceived quality of soundscapes, particularly in urban
      environments. This index incorporates factors such as the presence
      and levels of natural sounds, human-made sounds, and their
      respective contributions to the overall soundscape perception.</p>
          <p>The GSI is the ratio of the perceived extent of natural sounds
      (PNS) to the perceived extent of traffic noise (PTN):</p>
          <p>
            <disp-formula>
              <alternatives>
                <tex-math><![CDATA[
      GSI = \frac{<PNS>}{<PTN>}
      ]]></tex-math>
                <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="block">
                  <mml:mrow>
                    <mml:mi>G</mml:mi>
                    <mml:mi>S</mml:mi>
                    <mml:mi>I</mml:mi>
                    <mml:mo>=</mml:mo>
                    <mml:mfrac>
                      <mml:mrow>
                        <mml:mo>&lt;</mml:mo>
                        <mml:mi>P</mml:mi>
                        <mml:mi>N</mml:mi>
                        <mml:mi>S</mml:mi>
                        <mml:mo>&gt;</mml:mo>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mo>&lt;</mml:mo>
                        <mml:mi>P</mml:mi>
                        <mml:mi>T</mml:mi>
                        <mml:mi>N</mml:mi>
                        <mml:mo>&gt;</mml:mo>
                      </mml:mrow>
                    </mml:mfrac>
                  </mml:mrow>
                </mml:math>
              </alternatives>
            </disp-formula>
          </p>
          <p>The GSI is noted to range between 1/5 and 5, with several
      ranges of values given which correspond to general categories of
      the perceived dominance of traffic noise.</p>
          <p>While GSI represents a commendable effort to bridge the gap
      between objective measurements and subjective perceptions, it
      remains limited in its ability to capture the full complexity of
      soundscape perception across diverse contexts. The intricate
      interplay between various sound sources, their temporal patterns,
      and the specific context in which they are experienced
      necessitates a more flexible and adaptable approach to index
      development.</p>
        </sec>
      </sec>
      <sec id="motivations-goals">
        <title>Motivations &amp; Goals</title>
        <p>The primary motivation behind the development of the Soundscape
    Perception Indices (SPIs) framework stems from the need to address
    the existing gap in quantifying and comparing soundscape quality
    across diverse contexts and applications. By creating a unified
    framework for defining these indices, the aim is to facilitate a
    broader and more efficient application of the soundscape approach in
    various domains, such as urban planning, environmental management,
    acoustic design, and policy development.</p>
        <p>The overarching aim of this framework is to empower stakeholders,
    decision-makers, and researchers with the ability to create tailored
    indices that align with their specific objectives and design goals,
    while simultaneously enabling cross-comparisons and benchmarking
    against empirically-defined soundscape archetypes. This dual
    approach not only acknowledges the context-dependent nature of
    soundscape perception but also fosters a common language and
    understanding, facilitating knowledge sharing and collaborative
    efforts within the field.</p>
        <p><italic>Ranking</italic> - The ability to rank soundscapes based
    on their quality is a key goal of the SPI framework. This ranking
    can be used to compare soundscapes across different contexts,
    identify areas for improvement, and prioritize interventions
    accordingly.</p>
        <p><italic>Standardisation</italic> - The SPI framework aims to
    provide a standardized approach for defining and calculating
    soundscape indices, ensuring consistency and comparability across
    different applications and domains. This standardization enables the
    development of best practices and facilitates knowledge exchange
    within the field.</p>
      </sec>
    </sec>
    <sec id="methodology">
      <title>Methodology</title>
      <sec id="soundscape-circumplex-projection">
        <title>Soundscape Circumplex &amp; Projection</title>
        <p>SPI is grounded in the soundscape circumplex model
    (<xref alt="Ö. Axelsson, Nilsson, and Berglund 2010" rid="ref-Axelsson2010principal" ref-type="bibr">Ö.
    Axelsson, Nilsson, and Berglund 2010</xref>;
    <xref alt="Östen Axelsson, Nilsson, and Berglund 2012" rid="ref-Axelsson2012Swedish" ref-type="bibr">Östen
    Axelsson, Nilsson, and Berglund 2012</xref>), a robust theoretical
    foundation for understanding and representing the multi-dimensional
    nature of soundscape perception. The reason for grounding the SPI
    into the soundscape circumplex is that we have observed this model
    (and its corresponding PAQs) to become the most prevalent one in
    soundscape literature
    (<xref alt="Aletta and Torresin 2023" rid="ref-Aletta2023Adoption" ref-type="bibr">Aletta
    and Torresin 2023</xref>). For the sake of supporting
    standardization, we feel that we need the SPI to align to this
    model.</p>
        <p>Method A is built on a series of descriptors referred to as the
    Perceived Affective Quality (PAQ), proposed by
    (<xref alt="Ax/elsson2010principal?" rid="ref-AxU002Felsson2010principal" ref-type="bibr"><bold>Ax/elsson2010principal?</bold></xref>).
    These PAQs are based on the pleasantness-activity paradigm present
    in research on emotions and environmental psychology, in particular
    Russell’s circumplex model of affect
    (<xref alt="Russell 1980" rid="ref-Russell1980circumplex" ref-type="bibr">Russell
    1980</xref>). As summarised by Axelsson: “Russell’s model identifies
    two dimensions related to the perceived pleasantness of environments
    and how activating or arousing the environment is.”</p>
        <p>To move the 8-item PAQ responses into the 2-dimensional
    circumplex space, we use the projection method first presented in
    ISO 12913-3:2018. This projection method and its associated formulae
    were recently updated further in
    (<xref alt="Aletta2024?" rid="ref-Aletta2024" ref-type="bibr"><bold>Aletta2024?</bold></xref>)
    to include a correction for the language in which the survey was
    conducted. The formulae are as follows:</p>
        <p>
          <disp-formula>
            <alternatives>
              <tex-math><![CDATA[
    P_{ISO} = \frac{1}{\lambda_{pl}} \sum_{i=1}^{8} \cos \theta_i \cdot \sigma_i
    ]]></tex-math>
              <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="block">
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mi>I</mml:mi>
                      <mml:mi>S</mml:mi>
                      <mml:mi>O</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo>=</mml:mo>
                  <mml:mfrac>
                    <mml:mn>1</mml:mn>
                    <mml:msub>
                      <mml:mi>λ</mml:mi>
                      <mml:mrow>
                        <mml:mi>p</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mfrac>
                  <mml:munderover>
                    <mml:mo>∑</mml:mo>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                      <mml:mo>=</mml:mo>
                      <mml:mn>1</mml:mn>
                    </mml:mrow>
                    <mml:mn>8</mml:mn>
                  </mml:munderover>
                  <mml:mo>cos</mml:mo>
                  <mml:msub>
                    <mml:mi>θ</mml:mi>
                    <mml:mi>i</mml:mi>
                  </mml:msub>
                  <mml:mo>⋅</mml:mo>
                  <mml:msub>
                    <mml:mi>σ</mml:mi>
                    <mml:mi>i</mml:mi>
                  </mml:msub>
                </mml:mrow>
              </mml:math>
            </alternatives>
          </disp-formula>
        </p>
        <p>
          <disp-formula>
            <alternatives>
              <tex-math><![CDATA[
    E_{ISO} = \frac{1}{\lambda_{pl}} \sum_{i=1}^{8} \sin \theta_i \cdot \sigma_i 
    ]]></tex-math>
              <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="block">
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>E</mml:mi>
                    <mml:mrow>
                      <mml:mi>I</mml:mi>
                      <mml:mi>S</mml:mi>
                      <mml:mi>O</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo>=</mml:mo>
                  <mml:mfrac>
                    <mml:mn>1</mml:mn>
                    <mml:msub>
                      <mml:mi>λ</mml:mi>
                      <mml:mrow>
                        <mml:mi>p</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mfrac>
                  <mml:munderover>
                    <mml:mo>∑</mml:mo>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                      <mml:mo>=</mml:mo>
                      <mml:mn>1</mml:mn>
                    </mml:mrow>
                    <mml:mn>8</mml:mn>
                  </mml:munderover>
                  <mml:mo>sin</mml:mo>
                  <mml:msub>
                    <mml:mi>θ</mml:mi>
                    <mml:mi>i</mml:mi>
                  </mml:msub>
                  <mml:mo>⋅</mml:mo>
                  <mml:msub>
                    <mml:mi>σ</mml:mi>
                    <mml:mi>i</mml:mi>
                  </mml:msub>
                </mml:mrow>
              </mml:math>
            </alternatives>
          </disp-formula>
        </p>
        <p>where $_i$ is the response to the (i)th item of the PAQ. The
    resulting (x) and (y) values are then used to calculate the polar
    angle () and the radial distance (r) as follows:</p>
        <p>
          <bold>
            <italic>Add formulae for <inline-formula><alternatives><tex-math><![CDATA[\theta]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>θ</mml:mi></mml:math></alternatives></inline-formula>
    and r</italic>
          </bold>
        </p>
        <p>Using the angles derived in
    (<xref alt="Aletta2024?" rid="ref-Aletta2024" ref-type="bibr"><bold>Aletta2024?</bold></xref>),
    the following table is used to convert the angles into the ISO
    12913-3:2018 circumplex space:</p>
      </sec>
    </sec>
  </body>
  <back>
    <ref-list>
      <title/>
      <ref id="ref-Aletta2015Soundscape">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
          </person-group>
          <article-title>Soundscape approach integrating noise mapping techniques: a case study in Brighton, UK</article-title>
          <source>Noise Mapping</source>
          <year iso-8601-date="2015-07">2015</year>
          <month>07</month>
          <volume>2</volume>
          <issue>1</issue>
          <issn>2084-879X</issn>
          <uri>https://www.degruyter.com/view/j/noise.2015.2.issue-1/noise-2015-0001/noise-2015-0001.xml http://files/427/Aletta and Kang - 2015 - Soundscape approach integrating noise mapping tech.pdf</uri>
          <pub-id pub-id-type="doi">10.1515/noise-2015-0001</pub-id>
          <fpage>1</fpage>
          <lpage>12</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Aletta2016Soundscape">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
            <name>
              <surname>Axelsson</surname>
            </name>
          </person-group>
          <article-title>Soundscape descriptors and a conceptual framework for developing predictive soundscape models</article-title>
          <source>Landscape and Urban Planning</source>
          <publisher-name>Elsevier B.V.</publisher-name>
          <year iso-8601-date="2016-07">2016</year>
          <month>07</month>
          <volume>149</volume>
          <pub-id pub-id-type="doi">10.1016/j.landurbplan.2016.02.001</pub-id>
          <fpage>65</fpage>
          <lpage>74</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Aletta2023Adoption">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
            <name>
              <surname>Torresin</surname>
              <given-names>Simone</given-names>
            </name>
          </person-group>
          <article-title>Adoption of ISO/TS 12913-2:2018 protocols for data collection from individuals in soundscape studies: An overview of the literature</article-title>
          <source>Current Pollution Reports</source>
          <publisher-name>Springer Science; Business Media LLC</publisher-name>
          <year iso-8601-date="2023-10">2023</year>
          <month>10</month>
          <issn>2198-6592</issn>
          <pub-id pub-id-type="doi">10.1007/s40726-023-00283-6</pub-id>
        </element-citation>
      </ref>
      <ref id="ref-Axelsson2010principal">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Axelsson</surname>
              <given-names>Östen</given-names>
            </name>
            <name>
              <surname>Nilsson</surname>
              <given-names>Mats E.</given-names>
            </name>
            <name>
              <surname>Berglund</surname>
              <given-names>Birgitta</given-names>
            </name>
          </person-group>
          <article-title>A principal components model of soundscape perception</article-title>
          <source>The Journal of the Acoustical Society of America</source>
          <year iso-8601-date="2010">2010</year>
          <volume>128</volume>
          <issue>5</issue>
          <issn>0001-4966</issn>
          <pub-id pub-id-type="doi">10.1121/1.3493436</pub-id>
          <pub-id pub-id-type="pmid">21110579</pub-id>
          <fpage>2836</fpage>
          <lpage>2846</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Axelsson2012Swedish">
        <element-citation publication-type="paper-conference">
          <person-group person-group-type="author">
            <name>
              <surname>Axelsson</surname>
            </name>
            <name>
              <surname>Nilsson</surname>
              <given-names>Mats E.</given-names>
            </name>
            <name>
              <surname>Berglund</surname>
              <given-names>Birgitta</given-names>
            </name>
          </person-group>
          <article-title>The Swedish soundscape-quality protocol</article-title>
          <source>The Journal of the Acoustical Society of America</source>
          <publisher-name>Acoustical Society of America (ASA)</publisher-name>
          <year iso-8601-date="2012-04">2012</year>
          <month>04</month>
          <volume>131</volume>
          <pub-id pub-id-type="doi">10.1121/1.4709112</pub-id>
          <fpage>3476</fpage>
          <lpage>3476</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Berglund1999Guidelines">
        <element-citation publication-type="report">
          <person-group person-group-type="author">
            <name>
              <surname>Berglund</surname>
              <given-names>Birgitta</given-names>
            </name>
            <name>
              <surname>Lindvall</surname>
              <given-names>Thomas</given-names>
            </name>
            <name>
              <surname>Schwela</surname>
              <given-names>Dietrich H.</given-names>
            </name>
          </person-group>
          <article-title>Guidelines for community noise</article-title>
          <publisher-name>World Health Organization; World Health Organization, Geneva</publisher-name>
          <year iso-8601-date="1999">1999</year>
        </element-citation>
      </ref>
      <ref id="ref-Berglund2006Soundscape">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Berglund</surname>
              <given-names>Birgitta</given-names>
            </name>
            <name>
              <surname>Nilsson</surname>
              <given-names>Mats E.</given-names>
            </name>
          </person-group>
          <article-title>Soundscape quality in suburban green areas and city parks</article-title>
          <source>Acta Acustica united with Acustica</source>
          <year iso-8601-date="2006">2006</year>
          <volume>92</volume>
          <issue>6</issue>
          <issn>1610-1928</issn>
          <fpage>903</fpage>
          <lpage>911</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Erfanian2019Psychophysiological">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Erfanian</surname>
              <given-names>Mercede</given-names>
            </name>
            <name>
              <surname>Mitchell</surname>
              <given-names>Andrew J.</given-names>
            </name>
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
          </person-group>
          <article-title>The Psychophysiological Implications of Soundscape: A Systematic Review of Empirical Literature and a Research Agenda</article-title>
          <source>International Journal of Environmental Research and Public Health</source>
          <year iso-8601-date="2019">2019</year>
          <volume>16</volume>
          <issue>19</issue>
          <issn>1660-4601</issn>
          <pub-id pub-id-type="doi">10.3390/ijerph16193533</pub-id>
          <fpage>3533</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-EuropeanUnion2002Directive">
        <element-citation publication-type="book">
          <person-group person-group-type="author">
            <string-name>European Union</string-name>
          </person-group>
          <source>Directive 2002/49/EC of the European Parliament and of the Council of 25 June 2002 relating to the assessment and management of environmental noise</source>
          <year iso-8601-date="2002">2002</year>
          <fpage>12</fpage>
          <lpage>25</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Fiebig2018Does">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Fiebig</surname>
              <given-names>André</given-names>
            </name>
          </person-group>
          <article-title>Does it make a difference to have soundscape standards ?</article-title>
          <source>Proceedings - Euronoise 2018</source>
          <year iso-8601-date="2018-06">2018</year>
          <month>06</month>
          <issue>June</issue>
          <uri>https://www.euronoise2018.eu/docs/papers/482_Euronoise2018.pdf</uri>
          <fpage>6</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-Grinfeder2022What">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Grinfeder</surname>
              <given-names>Elie</given-names>
            </name>
            <name>
              <surname>Lorenzi</surname>
              <given-names>Christian</given-names>
            </name>
            <name>
              <surname>Haupert</surname>
              <given-names>Sylvain</given-names>
            </name>
            <name>
              <surname>Sueur</surname>
              <given-names>Jérôme</given-names>
            </name>
          </person-group>
          <article-title>What do we mean by "Soundscape"? A Functional Description</article-title>
          <source>Frontiers in Ecology and Evolution</source>
          <publisher-name>Frontiers Media SA</publisher-name>
          <year iso-8601-date="2022-06">2022</year>
          <month>06</month>
          <volume>10</volume>
          <uri>https://www.frontiersin.org/articles/10.3389/fevo.2022.894232/full</uri>
          <pub-id pub-id-type="doi">10.3389/fevo.2022.894232</pub-id>
        </element-citation>
      </ref>
      <ref id="ref-Guski1997Psychological">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Guski</surname>
              <given-names>Rainer</given-names>
            </name>
          </person-group>
          <article-title>Psychological methods for evaluating sound quality and assessing acoustic information</article-title>
          <source>Acta Acustica united with Acustica</source>
          <publisher-name>S. Hirzel Verlag</publisher-name>
          <year iso-8601-date="1997">1997</year>
          <volume>83</volume>
          <issue>5</issue>
          <uri>https://www.ingentaconnect.com/content/dav/aaua/1997/00000083/00000005/art00007</uri>
          <fpage>765</fpage>
          <lpage>774</lpage>
        </element-citation>
      </ref>
      <ref id="ref-ISO12913Part2">
        <element-citation>
          <person-group person-group-type="author">
            <string-name>ISO/TS 12913-2:2018</string-name>
          </person-group>
          <article-title>Acoustics – Soundscape – Part 2: Data collection and reporting requirements</article-title>
          <year iso-8601-date="2018">2018</year>
        </element-citation>
      </ref>
      <ref id="ref-Kang2006Urban">
        <element-citation publication-type="book">
          <person-group person-group-type="author">
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
          </person-group>
          <source>Urban Sound Environment</source>
          <publisher-name>CRC Press</publisher-name>
          <year iso-8601-date="2006-09">2006</year>
          <month>09</month>
          <pub-id pub-id-type="doi">10.1201/9781482265613</pub-id>
        </element-citation>
      </ref>
      <ref id="ref-Kang2016Soundscape">
        <element-citation publication-type="book">
          <source>Soundscape and the Built Environment</source>
          <person-group person-group-type="editor">
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
            <name>
              <surname>Schulte-Fortkamp</surname>
              <given-names>Brigitte</given-names>
            </name>
          </person-group>
          <publisher-name>CRC Press</publisher-name>
          <publisher-loc>Boca Raton, FL</publisher-loc>
          <year iso-8601-date="2016">2016</year>
          <isbn>9781482226317</isbn>
          <fpage>197</fpage>
          <lpage>214</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Kang2018Impact">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
          </person-group>
          <article-title>The Impact and Outreach of Soundscape Research</article-title>
          <source>Environments</source>
          <year iso-8601-date="2018-07">2018</year>
          <month>07</month>
          <volume>5</volume>
          <issue>5</issue>
          <issn>2076-3298</issn>
          <pub-id pub-id-type="doi">10.3390/environments5050058</pub-id>
          <fpage>58</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-Kang2019Towards">
        <element-citation publication-type="paper-conference">
          <person-group person-group-type="author">
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
            <name>
              <surname>Aletta</surname>
              <given-names>Francesco</given-names>
            </name>
            <name>
              <surname>Oberman</surname>
              <given-names>Tin</given-names>
            </name>
            <name>
              <surname>Erfanian</surname>
              <given-names>Mercede</given-names>
            </name>
            <name>
              <surname>Kachlicka</surname>
              <given-names>Magdalena</given-names>
            </name>
            <name>
              <surname>Lionello</surname>
              <given-names>Matteo</given-names>
            </name>
            <name>
              <surname>Mitchell</surname>
              <given-names>Andrew</given-names>
            </name>
          </person-group>
          <article-title>Towards soundscape indices</article-title>
          <source>Proceedings of the 23rd international congress on acoustics</source>
          <publisher-name>RWTH Aachen University</publisher-name>
          <publisher-loc>Aachen</publisher-loc>
          <year iso-8601-date="2019-09">2019</year>
          <month>09</month>
          <volume>integrating 4th EAA Euroregio 2019 : 9-13 September 2019</volume>
          <uri>https://www.researchgate.net/publication/335661596{\_}Towards{\_}soundscape{\_}indices</uri>
          <pub-id pub-id-type="doi">10.18154/RWTH-CONV-239249</pub-id>
          <fpage>2488</fpage>
          <lpage>2495</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Kogan2018Green">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kogan</surname>
              <given-names>Pablo</given-names>
            </name>
            <name>
              <surname>Arenas</surname>
              <given-names>Jorge P.</given-names>
            </name>
            <name>
              <surname>Bermejo</surname>
              <given-names>Fernando</given-names>
            </name>
            <name>
              <surname>Hinalaf</surname>
              <given-names>María</given-names>
            </name>
            <name>
              <surname>Turra</surname>
              <given-names>Bruno</given-names>
            </name>
          </person-group>
          <article-title>A Green Soundscape Index (GSI): The potential of assessing the perceived balance between natural sound and traffic noise</article-title>
          <source>Science of The Total Environment</source>
          <publisher-name>Elsevier</publisher-name>
          <year iso-8601-date="2018-11">2018</year>
          <month>11</month>
          <volume>642</volume>
          <issn>0048-9697</issn>
          <uri>https://www.sciencedirect.com/science/article/pii/S0048969718320850</uri>
          <pub-id pub-id-type="doi">10.1016/j.scitotenv.2018.06.023</pub-id>
          <fpage>463</fpage>
          <lpage>472</lpage>
        </element-citation>
      </ref>
      <ref id="ref-Kruize2019Exploring">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kruize</surname>
              <given-names>Hanneke</given-names>
            </name>
            <name>
              <surname>Van Kamp</surname>
              <given-names>Irene</given-names>
            </name>
            <name>
              <surname>Van Den Berg</surname>
              <given-names>Magdalena</given-names>
            </name>
            <name>
              <surname>Van Kempen</surname>
              <given-names>Elise</given-names>
            </name>
            <name>
              <surname>Wendel-vos</surname>
              <given-names>Wanda</given-names>
            </name>
            <name>
              <surname>Ruijsbroek</surname>
              <given-names>Annemarie</given-names>
            </name>
            <name>
              <surname>Swart</surname>
              <given-names>Wim</given-names>
            </name>
            <name>
              <surname>Maas</surname>
              <given-names>Jolanda</given-names>
            </name>
            <name>
              <surname>Gidlow</surname>
              <given-names>Christopher</given-names>
            </name>
            <name>
              <surname>Smith</surname>
              <given-names>Graham</given-names>
            </name>
            <name>
              <surname>Ellis</surname>
              <given-names>Naomi</given-names>
            </name>
            <name>
              <surname>Hurst</surname>
              <given-names>Gemma</given-names>
            </name>
            <name>
              <surname>Masterson</surname>
              <given-names>Daniel</given-names>
            </name>
            <name>
              <surname>Triguero-mas</surname>
              <given-names>Margarita</given-names>
            </name>
            <name>
              <surname>Cirach</surname>
              <given-names>Marta</given-names>
            </name>
            <name>
              <surname>Gražulevičiené</surname>
              <given-names>Regina</given-names>
            </name>
            <name>
              <surname>Van Den Hazel</surname>
              <given-names>Peter</given-names>
            </name>
            <name>
              <surname>Nieuwenhuijsen</surname>
              <given-names>Mark</given-names>
            </name>
          </person-group>
          <article-title>Exploring mechanisms underlying the relationship between the natural outdoor environment and health and well-being – Results from the PHENOTYPE project</article-title>
          <source>Environment International</source>
          <publisher-name>Elsevier</publisher-name>
          <year iso-8601-date="2019">2019</year>
          <issue>October 2018</issue>
          <issn>0160-4120</issn>
          <pub-id pub-id-type="doi">10.1016/j.envint.2019.105173</pub-id>
          <fpage>105173</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-Mitchell2022Predictive">
        <element-citation publication-type="thesis">
          <person-group person-group-type="author">
            <name>
              <surname>Mitchell</surname>
              <given-names>Andrew</given-names>
            </name>
          </person-group>
          <article-title>Predictive Modelling of Complex Urban Soundscapes: Enabling an engineering approach to soundscape design</article-title>
          <publisher-name>University College London</publisher-name>
          <year iso-8601-date="2022-09">2022</year>
          <month>09</month>
          <uri>https://discovery.ucl.ac.uk/id/eprint/10156562</uri>
          <pub-id pub-id-type="doi">10.13140/RG.2.2.15590.50245</pub-id>
        </element-citation>
      </ref>
      <ref id="ref-Russell1980circumplex">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Russell</surname>
              <given-names>James A.</given-names>
            </name>
          </person-group>
          <article-title>A circumplex model of affect.</article-title>
          <source>Journal of personality and social psychology</source>
          <publisher-name>American Psychological Association</publisher-name>
          <year iso-8601-date="1980">1980</year>
          <volume>39</volume>
          <issue>6</issue>
          <pub-id pub-id-type="doi">10.1037/h0077714</pub-id>
          <fpage>1161</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-SchulteFortkamp2013Introduction">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Schulte-Fortkamp</surname>
              <given-names>Brigitte</given-names>
            </name>
            <name>
              <surname>Kang</surname>
              <given-names>Jian</given-names>
            </name>
          </person-group>
          <article-title>Introduction to the special issue on soundscapes</article-title>
          <source>The Journal of the Acoustical Society of America</source>
          <year iso-8601-date="2013-07">2013</year>
          <month>07</month>
          <volume>134</volume>
          <issue>1</issue>
          <issn>0001-4966</issn>
          <pub-id pub-id-type="doi">10.1121/1.4810760</pub-id>
          <pub-id pub-id-type="pmid">23862881</pub-id>
          <fpage>765</fpage>
          <lpage>766</lpage>
        </element-citation>
      </ref>
      <ref id="ref-SchulteFortkamp2023Soundscapes">
        <element-citation publication-type="book">
          <source>Soundscapes: Humans and Their Acoustic Environment</source>
          <person-group person-group-type="editor">
            <name>
              <surname>Schulte-Fortkamp</surname>
              <given-names>Brigitte</given-names>
            </name>
            <name>
              <surname>Fiebig</surname>
              <given-names>André</given-names>
            </name>
            <name>
              <surname>Sisneros</surname>
              <given-names>Joseph A.</given-names>
            </name>
            <name>
              <surname>Popper</surname>
              <given-names>Arthur N.</given-names>
            </name>
            <name>
              <surname>Fay</surname>
              <given-names>Richard R.</given-names>
            </name>
          </person-group>
          <publisher-name>Springer International Publishing</publisher-name>
          <year iso-8601-date="2023">2023</year>
          <pub-id pub-id-type="doi">10.1007/978-3-031-22779-0</pub-id>
        </element-citation>
      </ref>
      <ref id="ref-Xu2023frequency">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Xu</surname>
              <given-names>Zhi-yong</given-names>
            </name>
            <name>
              <surname>Chen</surname>
              <given-names>Lei</given-names>
            </name>
            <name>
              <surname>Pijanowski</surname>
              <given-names>Bryan C.</given-names>
            </name>
            <name>
              <surname>Zhao</surname>
              <given-names>Zhao</given-names>
            </name>
          </person-group>
          <article-title>A frequency-dependent acoustic diversity index: A revision to a classic acoustic index for soundscape ecological research</article-title>
          <source>Ecological Indicators</source>
          <publisher-name>Elsevier BV</publisher-name>
          <year iso-8601-date="2023-11">2023</year>
          <month>11</month>
          <volume>155</volume>
          <issn>1470-160X</issn>
          <pub-id pub-id-type="doi">10.1016/j.ecolind.2023.110940</pub-id>
          <fpage>110940</fpage>
          <lpage/>
        </element-citation>
      </ref>
      <ref id="ref-Yang2005Acoustic">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Yang</surname>
              <given-names>W.</given-names>
            </name>
            <name>
              <surname>Kang</surname>
              <given-names>J.</given-names>
            </name>
          </person-group>
          <article-title>Acoustic comfort evaluation in urban open public spaces</article-title>
          <source>Applied Acoustics</source>
          <publisher-name>Elsevier BV</publisher-name>
          <year iso-8601-date="2005-02">2005</year>
          <month>02</month>
          <volume>66</volume>
          <issue>2</issue>
          <pub-id pub-id-type="doi">10.1016/j.apacoust.2004.07.011</pub-id>
          <fpage>211</fpage>
          <lpage>229</lpage>
        </element-citation>
      </ref>
    </ref-list>
  </back>
  <!-- (F2ED4C6E)[nb-1]:/Users/mitch/Library/CloudStorage/OneDrive-UniversityCollegeLondon/_Fellowship/Papers - Drafts/J2401_JASA_SSID-Single-Index/draft1.qmd -->
  <sub-article article-type="notebook" id="nb-1-nb-2">
    <front-stub>
      <title-group>
        <article-title>Load Data</article-title>
      </title-group>
    </front-stub>
    <body>
      <sec id="initial_id-nb-2" specific-use="notebook-code">
        <code language="python">import warnings
from pathlib import Path

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import soundscapy as sspy
from scipy import stats
import rpyskewnorm as snpy
import scipydists as dists
from soundscapy.utils.parameters import PAQ_IDS, LANGUAGE_ANGLES
import circumplex as cx

from utils import spi
import utils

warnings.filterwarnings("ignore")
</code>
      </sec>
      <sec id="cell-752b6f9909f01867-nb-2" specific-use="notebook-code">
        <code language="python"># Load latest ISD dataset
# data = sspy.isd.load_zenodo()
# Load latest ISD dataset
isd_file = Path("ISD v1.0 Data.csv")

data = pd.read_csv(isd_file)
data, excl_data = sspy.isd.validate(data)
data = data.query("Language != 'cmn'")

# Exclude RegentsParkJapan outliers
# excl_id = list(data.query("LocationID == 'RegentsParkJapan'").query("ISOEventful &gt; 0.72 | ISOEventful &lt; -0.5").index)
# Excluded RegentsParkFields outliers
# excl_id = excl_id + list(data.query("LocationID == 'RegentsParkFields' and ISOPleasant &lt; 0").index) # Helicopters
excl_id = [652, 706, 548, 550, 551, 553, 569, 580, 609, 618, 623, 636, 643]
data.drop(excl_id, inplace=True)

data</code>
        <sec id="cell-752b6f9909f01867-output-0-nb-2" specific-use="notebook-output">
          <preformat>Renaming PAQ columns.
Checking PAQ data quality.
Identified 109 samples to remove.
[6, 9, 13, 30, 32, 46, 190, 213, 229, 244, 296, 412, 413, 428, 464, 485, 655, 734, 739, 762, 766, 780, 1067, 1274, 1290, 1316, 1320, 1338, 1346, 1347, 1397, 1425, 1431, 1446, 1447, 1470, 1485, 1491, 1504, 1505, 1510, 1512, 1517, 1522, 1523, 1527, 1599, 1698, 1734, 1817, 1911, 1948, 2069, 2107, 2109, 2111, 2150, 2199, 2277, 2293, 2384, 2386, 2490, 2523, 2584, 2592, 2695, 2762, 2767, 2783, 2789, 2825, 2826, 2832, 2840, 2856, 2859, 2879, 2883, 2889, 2910, 2932, 2956, 2969, 3031, 3058, 3077, 3124, 3149, 3163, 3185, 3202, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3272, 3302, 3365, 3414, 3491, 3502, 3510, 3517, 3533, 3583]</preformat>
        </sec>
        <sec id="cell-752b6f9909f01867-output-1-nb-2" specific-use="notebook-output">
          <table-wrap>
            <table border="1">
              <thead>
                <tr style="text-align: right;">
                  <th/>
                  <th>LocationID</th>
                  <th>SessionID</th>
                  <th>GroupID</th>
                  <th>RecordID</th>
                  <th>start_time</th>
                  <th>end_time</th>
                  <th>latitude</th>
                  <th>longitude</th>
                  <th>Language</th>
                  <th>Survey_Version</th>
                  <th>...</th>
                  <th>RA_cp90</th>
                  <th>RA_cp95</th>
                  <th>THD_THD</th>
                  <th>THD_Min</th>
                  <th>THD_Max</th>
                  <th>THD_L5</th>
                  <th>THD_L10</th>
                  <th>THD_L50</th>
                  <th>THD_L90</th>
                  <th>THD_L95</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>0</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV12</td>
                  <td>1434</td>
                  <td>2019-05-16 18:46:00</td>
                  <td>2019-05-16 18:56:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>8.15</td>
                  <td>6.72</td>
                  <td>-0.09</td>
                  <td>-11.76</td>
                  <td>54.18</td>
                  <td>34.82</td>
                  <td>26.53</td>
                  <td>5.57</td>
                  <td>-9.00</td>
                  <td>-10.29</td>
                </tr>
                <tr>
                  <td>1</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV12</td>
                  <td>1435</td>
                  <td>2019-05-16 18:46:00</td>
                  <td>2019-05-16 18:56:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>8.15</td>
                  <td>6.72</td>
                  <td>-0.09</td>
                  <td>-11.76</td>
                  <td>54.18</td>
                  <td>34.82</td>
                  <td>26.53</td>
                  <td>5.57</td>
                  <td>-9.00</td>
                  <td>-10.29</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1430</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1431</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>4</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1432</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                </tr>
                <tr>
                  <td>1693</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP161</td>
                  <td>61</td>
                  <td>2020-03-11 12:42:00</td>
                  <td>2020-03-11 12:55:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>2.54</td>
                  <td>2.00</td>
                  <td>-3.17</td>
                  <td>-11.97</td>
                  <td>59.64</td>
                  <td>37.87</td>
                  <td>26.54</td>
                  <td>6.33</td>
                  <td>-9.79</td>
                  <td>-10.34</td>
                </tr>
                <tr>
                  <td>1694</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>63</td>
                  <td>2020-03-11 12:39:00</td>
                  <td>2020-03-11 13:00:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1695</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>62</td>
                  <td>2020-03-11 12:54:00</td>
                  <td>2020-03-11 12:58:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1696</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>64</td>
                  <td>2020-03-11 12:56:00</td>
                  <td>2020-03-11 12:59:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1697</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP163</td>
                  <td>70</td>
                  <td>2020-03-11 23:08:00</td>
                  <td>2020-03-11 23:18:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>2.58</td>
                  <td>1.99</td>
                  <td>-3.20</td>
                  <td>-9.67</td>
                  <td>57.99</td>
                  <td>35.54</td>
                  <td>29.32</td>
                  <td>8.86</td>
                  <td>-5.61</td>
                  <td>-6.71</td>
                </tr>
              </tbody>
            </table>
          </table-wrap>
        </sec>
      </sec>
      <sec id="f988c516-nb-2" specific-use="notebook-content">
        <sec id="calculate-iso-coordinates-nb-2">
          <title>Calculate ISO Coordinates</title>
          <sec id="standard-iso-projection-nb-2">
            <title>Standard ISO Projection</title>
          </sec>
          <sec id="cell-862ac85dc0fbf154-nb-2" specific-use="notebook-code">
            <code language="python">iso_data = data.copy()
iso_data = sspy.surveys.add_iso_coords(iso_data)
sspy.plotting.density(iso_data, xlim=(-1.3, 1.3), ylim=(-1.3, 1.3))</code>
            <sec id="cell-862ac85dc0fbf154-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-4-output-1.png"/>
            </sec>
          </sec>
          <sec id="cell-6fd45a7e-nb-2" specific-use="notebook-content">
  </sec>
          <sec id="satp-iso-projection-nb-2">
            <title>SATP ISO Projection</title>
            <p>Using corrected angles</p>
          </sec>
          <sec id="cell-9009734a-nb-2" specific-use="notebook-code">
            <code language="python">satp_data = data.copy()

for i, row in satp_data.iterrows():
    lang = row['Language']
    angles = LANGUAGE_ANGLES[lang]
    iso_pl, iso_ev = sspy.surveys.adj_iso_pl(row[PAQ_IDS], angles, scale=4), sspy.surveys.adj_iso_ev(row[PAQ_IDS], angles, scale=4)
    satp_data.loc[i, 'ISOPleasant'] = iso_pl
    satp_data.loc[i, 'ISOEventful'] = iso_ev
    
sspy.plotting.jointplot(satp_data, xlim=(-1.3, 1.3), ylim=(-1.3, 1.3))
    </code>
            <sec id="cell-9009734a-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-5-output-1.png"/>
            </sec>
          </sec>
          <sec id="cell-9e5f8efb-nb-2" specific-use="notebook-content">
  </sec>
          <sec id="ssm-method-nb-2">
            <title>SSM Method</title>
          </sec>
          <sec id="cell-75fecfb7-nb-2" specific-use="notebook-code">
            <code language="python">def ssm_coords(items: np.array, angles: tuple) -&gt; tuple:
    ssm_params = cx.ssm_parameters(items, angles)
    return ssm_params[1:3]

scale = 0.4</code>
          </sec>
          <sec id="ac1c704f-nb-2" specific-use="notebook-code">
            <code language="python">ssm_data = data.copy()
for i, row in ssm_data.iterrows():
    coords = ssm_coords((row[PAQ_IDS] - 3) / 2, angles=cx.OCTANTS)
    ssm_data.loc[i, ['ISOPleasant', 'ISOEventful']] = coords

sspy.plotting.jointplot(ssm_data, xlim=(-1.3, 1.3), ylim=(-1.3, 1.3))</code>
            <sec id="ac1c704f-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-7-output-1.png"/>
            </sec>
          </sec>
          <sec id="c3c51059-nb-2" specific-use="notebook-code">
            <code language="python">ssm_satp_data = data.copy()

for i, row in ssm_data.iterrows():
    lang = row['Language']
    angles = LANGUAGE_ANGLES[lang]
    coords = ssm_coords((row[PAQ_IDS] - 3) / 2, angles)
    ssm_satp_data.loc[i, ['ISOPleasant', 'ISOEventful']] = coords
# coords = data.apply(lambda x: ssm_coords(x[PAQ_IDS] * scale, LANGUAGE_ANGLES['eng']), axis=1)
# ssm_data[['ISOPleasant', 'ISOPleasant']] = coords

sspy.plotting.jointplot(ssm_satp_data, xlim=(-1.3, 1.3), ylim=(-1.3, 1.3))</code>
            <sec id="c3c51059-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-8-output-1.png"/>
            </sec>
          </sec>
          <sec id="d8e32855485ff960-nb-2" specific-use="notebook-content">
  </sec>
        </sec>
        <sec id="testing-the-distribution-methods-nb-2">
          <title>Testing the distribution methods</title>
        </sec>
        <sec id="ba679f393f640213-nb-2" specific-use="notebook-code">
          <code language="python">def try_benchmark(data):
    res = {}
    for location in data.LocationID.unique():
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        res[location] = utils.ks2d2s(loc_data, loc_data, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res

def try_msn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        # fit selm model to get parameters
        try:
            loc_m = snpy.selm("ISOPleasant", "ISOEventful", data=loc_data)
        except:
            print("Error in selm fit for: ", location)
            continue
        try:
            loc_Y = snpy.sample_msn(loc_m, n=1000)
        except:
            print("Error in sample_msn for: ", location)
            continue
           
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res

def try_mtsn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        # fit selm model to get parameters
        try:
            loc_m = snpy.selm("ISOPleasant", "ISOEventful", data=loc_data)
        except:
            print("Error in selm fit for: ", location)
            continue
        try:
            loc_Y = snpy.sample_mtsn(loc_m, n=1000)
        except:
            print("Error in sample_mtsn for: ", location)
            continue
            
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res


def try_scipy_tsn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        # fit selm model to get parameters
        loc, scale, alpha = dists.estimate_skew_moments_2d(loc_data[['ISOPleasant', 'ISOEventful']].to_numpy())
        loc_Y = dists.scipy_tsn_2d(loc, scale, alpha, num_samples=1000)            
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res


def try_scipy_msn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        mean, cov, skew = dists.estimate_msn_moments(
            loc_data[['ISOPleasant', 'ISOEventful']].to_numpy()
            )
        loc_Y = dists.scipy_msn(shape=skew, cov=cov, mean=mean).rvs_slow(1000)
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res


def try_scipy_mn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        mean, cov, _ = dists.estimate_msn_moments(
            loc_data[['ISOPleasant', 'ISOEventful']].to_numpy()
            )
        loc_Y = dists.scipy_mn(mean, cov, num_samples=1000)
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res

def try_scipy_mtn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        mean, cov, _ = dists.estimate_msn_moments(
            loc_data[['ISOPleasant', 'ISOEventful']].to_numpy()
            )
        loc_Y = dists.scipy_mtn(mean, cov, num_samples=1000)
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res


def try_scipy_tn(data):
    res = {}
    for location in data.LocationID.unique():
        # split out location data
        loc_data = sspy.isd.select_location_ids(data, location)[['ISOPleasant', 'ISOEventful']]
        mean = loc_data[['ISOPleasant', 'ISOEventful']].mean().to_numpy()
        stddev = loc_data[['ISOPleasant', 'ISOEventful']].std().to_numpy()
        loc_Y = dists.scipy_tn_2d(mean, stddev, num_samples=1000)
        loc_Y = pd.DataFrame(loc_Y, columns=['ISOPleasant', 'ISOEventful'])
        res[location] = utils.ks2d2s(loc_data, loc_Y, extra=True)
    res = pd.DataFrame.from_dict(res, orient='index', columns=["p", "D"])
    return res
    
  </code>
        </sec>
        <sec id="cell-0800b34e-nb-2" specific-use="notebook-code">
          <code language="python">print("Running benchmarks for ISO")
iso_res = {}
iso_res['benchmark'] = try_benchmark(iso_data)
iso_res['msn'] = try_msn(iso_data)
iso_res['mtsn'] = try_mtsn(iso_data)
iso_res['scipy_mn'] = try_scipy_mn(iso_data)
iso_res['scipy_tn'] = try_scipy_tn(iso_data)
iso_res['scipy_mtn'] = try_scipy_mtn(iso_data)
iso_res['scipy_tsn'] = try_scipy_tsn(iso_data)
iso_res['scipy_msn'] = try_scipy_msn(iso_data)

print("Running benchmarks for SATP")
satp_res = {}
satp_res['benchmark'] = try_benchmark(satp_data)
satp_res['msn'] = try_msn(satp_data)
satp_res['mtsn'] = try_mtsn(satp_data)
satp_res['scipy_mn'] = try_scipy_mn(satp_data)
satp_res['scipy_tn'] = try_scipy_tn(satp_data)
satp_res['scipy_mtn'] = try_scipy_mtn(satp_data)
satp_res['scipy_tsn'] = try_scipy_tsn(satp_data)
satp_res['scipy_msn'] = try_scipy_msn(satp_data)

print("Running benchmarks for SSM")
ssm_res = {}
ssm_res['benchmark'] = try_benchmark(ssm_data)
ssm_res['msn'] = try_msn(ssm_data)
ssm_res['mtsn'] = try_mtsn(ssm_data)
ssm_res['scipy_mn'] = try_scipy_mn(ssm_data)
ssm_res['scipy_tn'] = try_scipy_tn(ssm_data)
ssm_res['scipy_mtn'] = try_scipy_mtn(ssm_data)
ssm_res['scipy_tsn'] = try_scipy_tsn(ssm_data)
ssm_res['scipy_msn'] = try_scipy_msn(ssm_data)

print("Running benchmarks for SSM_SATP")
ssm_satp_res = {}
ssm_satp_res['benchmark'] = try_benchmark(ssm_satp_data)
ssm_satp_res['msn'] = try_msn(ssm_satp_data)
ssm_satp_res['mtsn'] = try_mtsn(ssm_satp_data)
ssm_satp_res['scipy_mn'] = try_scipy_mn(ssm_satp_data)  
ssm_satp_res['scipy_tn'] = try_scipy_tn(ssm_satp_data)
ssm_satp_res['scipy_mtn'] = try_scipy_mtn(ssm_satp_data)
ssm_satp_res['scipy_tsn'] = try_scipy_tsn(ssm_satp_data)
ssm_satp_res['scipy_msn'] = try_scipy_msn(ssm_satp_data)

iso_res = pd.concat(iso_res, axis=1)
satp_res = pd.concat(satp_res, axis=1)
ssm_res = pd.concat(ssm_res, axis=1)
ssm_satp_res = pd.concat(ssm_satp_res, axis=1)
  </code>
          <sec id="cell-0800b34e-output-0-nb-2" specific-use="notebook-output">
            <preformat>Running benchmarks for ISO
Error in sample_msn for:  RegentsParkJapan
Error in sample_mtsn for:  RegentsParkJapan
Running benchmarks for SATP
Running benchmarks for SSM
Running benchmarks for SSM_SATP</preformat>
          </sec>
          <sec id="cell-0800b34e-output-1-nb-2" specific-use="notebook-output">
            <preformat>R[write to console]: Error in chol.default(lot$aux$Psi) : 
  the leading minor of order 2 is not positive

R[write to console]: Error in chol.default(lot$aux$Psi) : 
  the leading minor of order 2 is not positive
  </preformat>
          </sec>
        </sec>
        <sec id="cell-231c96c7-nb-2" specific-use="notebook-code">
          <code language="python">res = pd.DataFrame({
    "iso": iso_res.mean(),
    "satp": satp_res.mean(),
    "ssm": ssm_res.mean(),
    "ssm_satp": ssm_satp_res.mean()
})
res</code>
          <sec id="cell-231c96c7-output-0-nb-2" specific-use="notebook-output">
            <table-wrap>
              <table border="1">
                <thead>
                  <tr style="text-align: right;">
                    <th/>
                    <th/>
                    <th>iso</th>
                    <th>satp</th>
                    <th>ssm</th>
                    <th>ssm_satp</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td rowspan="2" valign="top">benchmark</td>
                    <td>p</td>
                    <td>1.000000</td>
                    <td>1.000000</td>
                    <td>1.000000</td>
                    <td>1.000000</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.015185</td>
                    <td>0.015185</td>
                    <td>0.015185</td>
                    <td>0.015185</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">msn</td>
                    <td>p</td>
                    <td>0.465357</td>
                    <td>0.562509</td>
                    <td>0.486952</td>
                    <td>0.456373</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.118309</td>
                    <td>0.109810</td>
                    <td>0.116221</td>
                    <td>0.119853</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">mtsn</td>
                    <td>p</td>
                    <td>0.433930</td>
                    <td>0.442268</td>
                    <td>0.229574</td>
                    <td>0.239475</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.122008</td>
                    <td>0.126246</td>
                    <td>0.164551</td>
                    <td>0.158554</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">scipy_mn</td>
                    <td>p</td>
                    <td>0.305868</td>
                    <td>0.349701</td>
                    <td>0.349431</td>
                    <td>0.360433</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.138710</td>
                    <td>0.134823</td>
                    <td>0.133068</td>
                    <td>0.132576</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">scipy_tn</td>
                    <td>p</td>
                    <td>0.003758</td>
                    <td>0.006717</td>
                    <td>0.004066</td>
                    <td>0.001909</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.325064</td>
                    <td>0.315896</td>
                    <td>0.321632</td>
                    <td>0.326232</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">scipy_mtn</td>
                    <td>p</td>
                    <td>0.279799</td>
                    <td>0.263552</td>
                    <td>0.123244</td>
                    <td>0.186736</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.148024</td>
                    <td>0.158660</td>
                    <td>0.197856</td>
                    <td>0.180046</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">scipy_tsn</td>
                    <td>p</td>
                    <td>0.376730</td>
                    <td>0.352066</td>
                    <td>0.236838</td>
                    <td>0.329696</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.127551</td>
                    <td>0.135906</td>
                    <td>0.163057</td>
                    <td>0.144473</td>
                  </tr>
                  <tr>
                    <td rowspan="2" valign="top">scipy_msn</td>
                    <td>p</td>
                    <td>0.176612</td>
                    <td>0.222497</td>
                    <td>0.129377</td>
                    <td>0.183064</td>
                  </tr>
                  <tr>
                    <td>D</td>
                    <td>0.191251</td>
                    <td>0.184408</td>
                    <td>0.207325</td>
                    <td>0.198188</td>
                  </tr>
                </tbody>
              </table>
            </table-wrap>
          </sec>
        </sec>
        <sec id="f69a5359-nb-2" specific-use="notebook-code">
          <code language="python">ssm_satp_res</code>
          <sec id="f69a5359-output-0-nb-2" specific-use="notebook-output">
            <table-wrap>
              <table border="1">
                <thead>
                  <tr>
                    <th/>
                    <th colspan="2">benchmark</th>
                    <th colspan="2">msn</th>
                    <th colspan="2">mtsn</th>
                    <th colspan="2">scipy_mn</th>
                    <th colspan="2">scipy_tn</th>
                    <th colspan="2">scipy_mtn</th>
                    <th colspan="2">scipy_tsn</th>
                    <th colspan="2">scipy_msn</th>
                  </tr>
                  <tr>
                    <th/>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                    <th>p</th>
                    <th>D</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>CarloV</td>
                    <td>1.0</td>
                    <td>0.008621</td>
                    <td>0.332220</td>
                    <td>0.108948</td>
                    <td>0.415114</td>
                    <td>0.101862</td>
                    <td>0.138097</td>
                    <td>0.133224</td>
                    <td>2.205885e-08</td>
                    <td>0.348931</td>
                    <td>0.008025</td>
                    <td>0.191466</td>
                    <td>0.212666</td>
                    <td>0.122017</td>
                    <td>2.190545e-04</td>
                    <td>0.246052</td>
                  </tr>
                  <tr>
                    <td>SanMarco</td>
                    <td>1.0</td>
                    <td>0.010526</td>
                    <td>0.187876</td>
                    <td>0.136500</td>
                    <td>0.124164</td>
                    <td>0.147947</td>
                    <td>0.571675</td>
                    <td>0.098316</td>
                    <td>5.307215e-07</td>
                    <td>0.345447</td>
                    <td>0.080655</td>
                    <td>0.159026</td>
                    <td>0.224133</td>
                    <td>0.131289</td>
                    <td>2.340935e-01</td>
                    <td>0.129974</td>
                  </tr>
                  <tr>
                    <td>PlazaBibRambla</td>
                    <td>1.0</td>
                    <td>0.055556</td>
                    <td>0.386987</td>
                    <td>0.230389</td>
                    <td>0.408058</td>
                    <td>0.226556</td>
                    <td>0.375052</td>
                    <td>0.232667</td>
                    <td>2.386168e-02</td>
                    <td>0.379222</td>
                    <td>0.264264</td>
                    <td>0.256222</td>
                    <td>0.692309</td>
                    <td>0.181278</td>
                    <td>2.622090e-02</td>
                    <td>0.375167</td>
                  </tr>
                  <tr>
                    <td>CamdenTown</td>
                    <td>1.0</td>
                    <td>0.009524</td>
                    <td>0.554649</td>
                    <td>0.095452</td>
                    <td>0.123191</td>
                    <td>0.142024</td>
                    <td>0.321463</td>
                    <td>0.114833</td>
                    <td>6.329528e-07</td>
                    <td>0.329119</td>
                    <td>0.162824</td>
                    <td>0.134690</td>
                    <td>0.111287</td>
                    <td>0.144571</td>
                    <td>1.885080e-01</td>
                    <td>0.130667</td>
                  </tr>
                  <tr>
                    <td>EustonTap</td>
                    <td>1.0</td>
                    <td>0.010417</td>
                    <td>0.539653</td>
                    <td>0.100333</td>
                    <td>0.214952</td>
                    <td>0.131958</td>
                    <td>0.405129</td>
                    <td>0.111375</td>
                    <td>8.278754e-08</td>
                    <td>0.364375</td>
                    <td>0.454078</td>
                    <td>0.107167</td>
                    <td>0.276429</td>
                    <td>0.124250</td>
                    <td>3.744412e-01</td>
                    <td>0.114167</td>
                  </tr>
                  <tr>
                    <td>Noorderplantsoen</td>
                    <td>1.0</td>
                    <td>0.010309</td>
                    <td>0.028382</td>
                    <td>0.181284</td>
                    <td>0.024192</td>
                    <td>0.184820</td>
                    <td>0.065612</td>
                    <td>0.162593</td>
                    <td>3.865498e-08</td>
                    <td>0.370784</td>
                    <td>0.001203</td>
                    <td>0.239593</td>
                    <td>0.393434</td>
                    <td>0.111918</td>
                    <td>1.359523e-04</td>
                    <td>0.272438</td>
                  </tr>
                  <tr>
                    <td>MarchmontGarden</td>
                    <td>1.0</td>
                    <td>0.009615</td>
                    <td>0.391306</td>
                    <td>0.108846</td>
                    <td>0.085582</td>
                    <td>0.151615</td>
                    <td>0.215849</td>
                    <td>0.127423</td>
                    <td>3.223722e-06</td>
                    <td>0.311962</td>
                    <td>0.022484</td>
                    <td>0.180962</td>
                    <td>0.572758</td>
                    <td>0.094538</td>
                    <td>2.035562e-03</td>
                    <td>0.224231</td>
                  </tr>
                  <tr>
                    <td>MonumentoGaribaldi</td>
                    <td>1.0</td>
                    <td>0.031250</td>
                    <td>0.416390</td>
                    <td>0.176875</td>
                    <td>0.551950</td>
                    <td>0.159125</td>
                    <td>0.603720</td>
                    <td>0.153000</td>
                    <td>2.595158e-03</td>
                    <td>0.365125</td>
                    <td>0.440012</td>
                    <td>0.173625</td>
                    <td>0.397052</td>
                    <td>0.179625</td>
                    <td>1.651685e-01</td>
                    <td>0.223625</td>
                  </tr>
                  <tr>
                    <td>TateModern</td>
                    <td>1.0</td>
                    <td>0.006579</td>
                    <td>0.047374</td>
                    <td>0.140842</td>
                    <td>0.085713</td>
                    <td>0.129211</td>
                    <td>0.174530</td>
                    <td>0.113526</td>
                    <td>2.649091e-09</td>
                    <td>0.329184</td>
                    <td>0.021713</td>
                    <td>0.154737</td>
                    <td>0.311808</td>
                    <td>0.099158</td>
                    <td>6.014070e-02</td>
                    <td>0.136132</td>
                  </tr>
                  <tr>
                    <td>PancrasLock</td>
                    <td>1.0</td>
                    <td>0.010753</td>
                    <td>0.053461</td>
                    <td>0.170430</td>
                    <td>0.048089</td>
                    <td>0.172914</td>
                    <td>0.370769</td>
                    <td>0.116011</td>
                    <td>2.052490e-06</td>
                    <td>0.332586</td>
                    <td>0.100386</td>
                    <td>0.154882</td>
                    <td>0.121358</td>
                    <td>0.149919</td>
                    <td>1.956629e-02</td>
                    <td>0.192522</td>
                  </tr>
                  <tr>
                    <td>TorringtonSq</td>
                    <td>1.0</td>
                    <td>0.008850</td>
                    <td>0.752887</td>
                    <td>0.078704</td>
                    <td>0.504059</td>
                    <td>0.096230</td>
                    <td>0.479924</td>
                    <td>0.098049</td>
                    <td>4.646734e-07</td>
                    <td>0.322407</td>
                    <td>0.544874</td>
                    <td>0.093279</td>
                    <td>0.521719</td>
                    <td>0.094951</td>
                    <td>3.435695e-01</td>
                    <td>0.109327</td>
                  </tr>
                  <tr>
                    <td>RegentsParkFields</td>
                    <td>1.0</td>
                    <td>0.009346</td>
                    <td>0.038338</td>
                    <td>0.167808</td>
                    <td>0.024889</td>
                    <td>0.176734</td>
                    <td>0.033875</td>
                    <td>0.170421</td>
                    <td>1.035844e-08</td>
                    <td>0.368654</td>
                    <td>0.000144</td>
                    <td>0.260575</td>
                    <td>0.007505</td>
                    <td>0.199463</td>
                    <td>2.905367e-06</td>
                    <td>0.309439</td>
                  </tr>
                  <tr>
                    <td>RegentsParkJapan</td>
                    <td>1.0</td>
                    <td>0.011236</td>
                    <td>0.007564</td>
                    <td>0.215112</td>
                    <td>0.003696</td>
                    <td>0.228556</td>
                    <td>0.008117</td>
                    <td>0.213657</td>
                    <td>7.924505e-06</td>
                    <td>0.321528</td>
                    <td>0.000008</td>
                    <td>0.321360</td>
                    <td>0.014374</td>
                    <td>0.202534</td>
                    <td>5.840853e-12</td>
                    <td>0.469247</td>
                  </tr>
                  <tr>
                    <td>RussellSq</td>
                    <td>1.0</td>
                    <td>0.006897</td>
                    <td>0.539724</td>
                    <td>0.084397</td>
                    <td>0.215597</td>
                    <td>0.110931</td>
                    <td>0.066730</td>
                    <td>0.137086</td>
                    <td>2.423797e-09</td>
                    <td>0.336862</td>
                    <td>0.048743</td>
                    <td>0.143241</td>
                    <td>0.387202</td>
                    <td>0.095052</td>
                    <td>7.369745e-05</td>
                    <td>0.237448</td>
                  </tr>
                  <tr>
                    <td>StPaulsCross</td>
                    <td>1.0</td>
                    <td>0.015152</td>
                    <td>0.559008</td>
                    <td>0.115697</td>
                    <td>0.385705</td>
                    <td>0.132667</td>
                    <td>0.265800</td>
                    <td>0.146939</td>
                    <td>6.053659e-05</td>
                    <td>0.334379</td>
                    <td>0.074092</td>
                    <td>0.188091</td>
                    <td>0.370314</td>
                    <td>0.134364</td>
                    <td>8.955410e-03</td>
                    <td>0.240924</td>
                  </tr>
                  <tr>
                    <td>StPaulsRow</td>
                    <td>1.0</td>
                    <td>0.013889</td>
                    <td>0.754768</td>
                    <td>0.095167</td>
                    <td>0.470160</td>
                    <td>0.119667</td>
                    <td>0.581053</td>
                    <td>0.109833</td>
                    <td>5.848892e-06</td>
                    <td>0.356722</td>
                    <td>0.393407</td>
                    <td>0.127111</td>
                    <td>0.742171</td>
                    <td>0.096278</td>
                    <td>5.104034e-01</td>
                    <td>0.116000</td>
                  </tr>
                  <tr>
                    <td>CampoPrincipe</td>
                    <td>1.0</td>
                    <td>0.009091</td>
                    <td>0.435522</td>
                    <td>0.102636</td>
                    <td>0.128669</td>
                    <td>0.138136</td>
                    <td>0.024154</td>
                    <td>0.175318</td>
                    <td>3.653703e-05</td>
                    <td>0.275545</td>
                    <td>0.002124</td>
                    <td>0.218273</td>
                    <td>0.208450</td>
                    <td>0.125409</td>
                    <td>1.199560e-10</td>
                    <td>0.404682</td>
                  </tr>
                  <tr>
                    <td>MiradorSanNicolas</td>
                    <td>1.0</td>
                    <td>0.035714</td>
                    <td>0.545286</td>
                    <td>0.168857</td>
                    <td>0.621139</td>
                    <td>0.159143</td>
                    <td>0.506720</td>
                    <td>0.173786</td>
                    <td>1.879414e-03</td>
                    <td>0.394929</td>
                    <td>0.587965</td>
                    <td>0.163357</td>
                    <td>0.429398</td>
                    <td>0.184929</td>
                    <td>3.269021e-01</td>
                    <td>0.200643</td>
                  </tr>
                </tbody>
              </table>
            </table-wrap>
          </sec>
        </sec>
        <sec id="b61529ae726afe2a-nb-2" specific-use="notebook-content">
</sec>
        <sec id="usage-examples-nb-2">
          <title>Usage Examples</title>
        </sec>
        <sec id="f02dff197456cd80-nb-2" specific-use="notebook-code">
          <code language="python">test_data = sspy.isd.select_location_ids(data, 'RegentsParkJapan')
  </code>
        </sec>
        <sec id="f2a777e9ac689f10-nb-2" specific-use="notebook-code">
          <code language="python">import rpyskewnorm as snpy

m = snpy.selm(
    x = "ISOPleasant",
    y = "ISOEventful",
    data = test_data,
    )

cp = snpy.extract_cp(m)
dp = snpy.extract_dp(m)
print(f"mean: {cp[0]}")
print(f"cov: {cp[1]}")
print(f"skew: {cp[2]}")

print("\n")
print(f"xi: {dp[0]}")
print(f"omega: {dp[1]}")
print(f"alpha: {dp[2]}")</code>
          <sec id="f2a777e9ac689f10-output-0-nb-2" specific-use="notebook-output">
            <preformat>mean: [[0.76569249 0.1337267 ]]
cov: [[0.05304569 0.01325881]
 [0.01325881 0.06333638]]
skew: [-0.99252395 -0.00648337]


xi: [[1.07026046 0.19593844]]
omega: [[0.14580734 0.03220651]
 [0.03220651 0.06720668]]
alpha: [-31277540.37912534    848852.67981869]</preformat>
          </sec>
        </sec>
        <sec id="eaa58b131041a74-nb-2" specific-use="notebook-code">
          <code language="python">Y1 = snpy.sample_msn(xi = dp[0], omega=dp[1], alpha=dp[2], n=1000)
Y1 = pd.DataFrame(Y1, columns=['ISOPleasant', 'ISOEventful'])

Y2 = snpy.sample_msn(m, n=1000)
Y2 = pd.DataFrame(Y2, columns=['ISOPleasant', 'ISOEventful'])

fig, axes = plt.subplots(1, 3, figsize=(9, 3))
sspy.plotting.density(Y1, ax=axes[0])
sspy.plotting.density(Y2, ax=axes[1])
sspy.plotting.density(test_data, ax=axes[2])
plt.tight_layout()

print(spi(test_data[['ISOPleasant', 'ISOEventful']], Y1))
print(spi(test_data[['ISOPleasant', 'ISOEventful']], Y2))
print(spi(Y1, Y2))
  </code>
          <sec id="eaa58b131041a74-output-0-nb-2" specific-use="notebook-output">
            <preformat>IndexError: tuple index out of range</preformat>
          </sec>
          <sec id="eaa58b131041a74-output-1-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-15-output-2.png"/>
          </sec>
        </sec>
        <sec id="cell-795dec7aa2e410c3-nb-2" specific-use="notebook-code">
          <code language="python">Yt1 = snpy.sample_mtsn(m, n=1000)
Yt1 = pd.DataFrame(Yt1, columns=['ISOPleasant', 'ISOEventful'])

Yt2 = snpy.sample_mtsn(xi = dp[0], omega=dp[1], alpha=dp[2], n=1000)
Yt2 = pd.DataFrame(Yt2, columns=['ISOPleasant', 'ISOEventful'])

fig, axes = plt.subplots(1, 3, figsize=(9, 3))
sspy.plotting.density(Yt1, ax=axes[0])
sspy.plotting.density(Yt2, ax=axes[1])
sspy.plotting.density(test_data, ax=axes[2])

print(spi(test_data[['ISOPleasant', 'ISOEventful']], Yt1))
print(spi(test_data[['ISOPleasant', 'ISOEventful']], Yt2))
print(spi(Yt1, Yt2))
  </code>
          <sec id="cell-795dec7aa2e410c3-output-0-nb-2" specific-use="notebook-output">
            <preformat>IndexError: tuple index out of range</preformat>
          </sec>
          <sec id="cell-795dec7aa2e410c3-output-1-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-16-output-2.png"/>
          </sec>
        </sec>
        <sec id="d2b8b883863b3353-nb-2" specific-use="notebook-content">
          <p>options explored:</p>
          <p>Multivariate Truncated Normal:</p>
          <list list-type="bullet">
            <list-item>
              <p>trun_mvnt:
      https://github.com/ralphma1203/trun_mvnt?tab=readme-ov-file</p>
            </list-item>
            <list-item>
              <p>StackOverflow:
      https://stackoverflow.com/questions/20115917/truncated-multivariate-normal-in-scipy</p>
            </list-item>
          </list>
          <p>Univariate Skew Normal: -
  http://azzalini.stat.unipd.it/SN/Intro/intro.html</p>
        </sec>
        <sec id="cell-8fd236630a34a30c-nb-2" specific-use="notebook-content">
</sec>
        <sec id="truncated-skew-normal-nb-2">
          <title>Truncated Skew-Normal</title>
        </sec>
        <sec id="cell-1e290848e49d6b44-nb-2" specific-use="notebook-code">
          <code language="python"># draw a sample
def truncated_skew_normal(loc: float, scale: float, skew: float, a: float = -1, b: float = 1, num_samples: int = 1000):
    # Parameters for the skew-normal distribution
    # delta = skew / np.sqrt(1 + skew**2)
    # delta = skew
    # Rejection sampling
    samples = []
    while len(samples) &lt; num_samples:
        candidate = stats.skewnorm.rvs(a=skew, loc=loc, scale=scale)
        if a &lt;= candidate &lt;= b:
            samples.append(candidate)
    return np.array(samples)


def estimate_skew_moments(samples: np.array):
    skew, loc, scale = stats.skewnorm.fit(samples)
    return loc, scale, skew


def trunc_skewnorm_2d(loc: tuple, scale: tuple, skew: tuple, a: tuple = (-1, -1), b: tuple = (1, 1), num_samples=1000):
    samples = np.array(
            [
                truncated_skew_normal(loc[0], scale[0], skew[0], a[0], b[0], num_samples),
                truncated_skew_normal(loc[1], scale[1], skew[1], a[1], b[1], num_samples)
                ]
            ).T
    return samples


def estimate_skew_moments_2d(samples: np.array):
    loc_0, scale_0, skew_0 = estimate_skew_moments(samples[:, 0])
    loc_1, scale_1, skew_1 = estimate_skew_moments(samples[:, 1])
    return (loc_0, loc_1), (scale_0, scale_1), (skew_0, skew_1)
  </code>
        </sec>
        <sec id="cell-32e28670ff7d9f57-nb-2" specific-use="notebook-content">
          <p>Note that the location, scale, and skew/shape parameters (referred
  to as ‘direct parameters’ by Azzalini) are distinct from the mean,
  covariance, and skewness parameters (referred to as ‘centred
  parameters’). http://azzalini.stat.unipd.it/SN/Intro/intro.html</p>
        </sec>
        <sec id="cfce294b21474367-nb-2" specific-use="notebook-code">
          <code language="python">0# loc_s, scale_s, skew_s = (0.377, 0.0827, -0.083)
# print((loc_s, scale_s, skew_s))
# s_data = truncated_skew_normal(loc_s, scale_s, skew_s, num_samples=10000)
s_data = test_data['ISOPleasant'].to_numpy()
loc_p, scale_p, skew_p = estimate_skew_moments(s_data)
p_data = truncated_skew_normal(loc_p, scale_p, skew_p, num_samples=10000)
print((loc_p, scale_p, skew_p))

# plot the pdfs
plt.figure()
plt.hist(p_data, bins=100, density=True, alpha=0.6, color='g')
plt.hist(s_data, bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = plt.xlim()
x = np.linspace(xmin, xmax, 100)
p = stats.skewnorm.pdf(x, skew_p, loc_p, scale_p)
plt.plot(x, p, 'k', linewidth=2)</code>
          <sec id="cfce294b21474367-output-0-nb-2" specific-use="notebook-output">
            <preformat>(0.8186226102942695, 0.6859803261389701, -4.20548006334138)</preformat>
          </sec>
          <sec id="cfce294b21474367-output-1-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-18-output-2.png"/>
          </sec>
        </sec>
        <sec id="d02c9deefe718718-nb-2" specific-use="notebook-code">
          <code language="python">targets = estimate_skew_moments_2d(test_data[['ISOPleasant', 'ISOEventful']].to_numpy())
print(targets)
p_data = trunc_skewnorm_2d(targets[0], targets[1], targets[2], num_samples=10000)
sample_moments = estimate_skew_moments_2d(p_data)
print(sample_moments)</code>
          <sec id="d02c9deefe718718-output-0-nb-2" specific-use="notebook-output">
            <preformat>((0.8186226102942695, -0.33616237140375016), (0.6859803261389701, 0.39567973474924745), (-4.20548006334138, 3.116395598533704))
((0.8128313333487476, -0.33028171176693866), (0.6663039964642805, 0.3877676207947591), (-5.155976610981078, 2.9096536098316017))</preformat>
          </sec>
        </sec>
        <sec id="c58dfbe0d486e526-nb-2" specific-use="notebook-code">
          <code language="python">fig, axes = plt.subplots(1, 2, figsize=(10, 5))
axes[0].hist(p_data[:, 0], bins=100, density=True, alpha=0.6, color='g')
axes[0].hist(test_data['ISOPleasant'], bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = axes[0].get_xlim()
x = np.linspace(xmin, xmax, 100)
p = stats.skewnorm.pdf(x, targets[0][0], targets[1][0], targets[2][0])
axes[0].plot(x, p, 'k', linewidth=2)

axes[1].hist(p_data[:, 1], bins=100, density=True, alpha=0.6, color='g')
axes[1].hist(test_data['ISOEventful'], bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = axes[1].get_xlim()
x = np.linspace(xmin, xmax, 100)
p = stats.skewnorm.pdf(x, targets[0][1], targets[1][1], targets[2][1])
axes[1].plot(x, p, 'k', linewidth=2)

plt.show()</code>
          <sec id="c58dfbe0d486e526-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-20-output-1.png"/>
          </sec>
        </sec>
        <sec id="cell-808c8cbe269d41eb-nb-2" specific-use="notebook-code">
          <code language="python">a, loc, scale = stats.skewnorm.fit(test_data['ISOPleasant'])

p_data = truncated_skew_normal(loc, scale, a, -1, 1, num_samples=1000)

# estimate parameters from sample
ae, loce, scalee = stats.skewnorm.fit(p_data)

# plot the pdfs
plt.figure()
plt.hist(p_data, bins=100, density=True, alpha=0.6, color='g')
plt.hist(test_data['ISOPleasant'], bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = plt.xlim()
x = np.linspace(xmin, xmax, 100)
p = stats.skewnorm.pdf(x, ae, loce, scalee)
plt.plot(x, p, 'k', linewidth=2)</code>
          <sec id="cell-808c8cbe269d41eb-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-21-output-1.png"/>
          </sec>
        </sec>
        <sec id="fde9f15bf1f08d15-nb-2" specific-use="notebook-code">
          <code language="python">a, loc, scale = stats.skewnorm.fit(test_data['ISOEventful'])

e_data = truncated_skew_normal(loc, scale, a, -1, 1, num_samples=1000)

# estimate parameters from sample
ae, loce, scalee = stats.skewnorm.fit(e_data)

# plot the pdfs
plt.figure()
plt.hist(e_data, bins=100, density=True, alpha=0.6, color='g')
plt.hist(test_data['ISOEventful'], bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = plt.xlim()
x = np.linspace(xmin, xmax, 100)
p = stats.skewnorm.pdf(x, ae, loce, scalee)
plt.plot(x, p, 'k', linewidth=2)</code>
          <sec id="fde9f15bf1f08d15-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-22-output-1.png"/>
          </sec>
        </sec>
        <sec id="c889cc71eac400db-nb-2" specific-use="notebook-code">
          <code language="python">from utils import spi

target_data = pd.DataFrame(
        {
            'ISOPleasant': p_data,
            'ISOEventful': e_data
            }
        )

spi(test_data[['ISOPleasant', 'ISOEventful']], target_data)</code>
          <sec id="c889cc71eac400db-output-0-nb-2" specific-use="notebook-output">
            <preformat>86</preformat>
          </sec>
        </sec>
        <sec id="cell-5c8bb05dc6ac9393-nb-2" specific-use="notebook-code">
          <code language="python">sspy.plotting.jointplot(test_data)</code>
          <sec id="cell-5c8bb05dc6ac9393-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-24-output-1.png"/>
          </sec>
        </sec>
        <sec id="cell-2f8a2682598aec32-nb-2" specific-use="notebook-code">
          <code language="python">sspy.plotting.jointplot(target_data)</code>
          <sec id="cell-2f8a2682598aec32-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-25-output-1.png"/>
          </sec>
        </sec>
        <sec id="cell-80c6c847c135c166-nb-2" specific-use="notebook-code">
          <code language="python">spi(sspy.isd.select_location_ids(data, 'SanMarco'), target_data)
  </code>
          <sec id="cell-80c6c847c135c166-output-0-nb-2" specific-use="notebook-output">
            <preformat>43</preformat>
          </sec>
        </sec>
        <sec id="f4f0df3fb83e5dc6-nb-2" specific-use="notebook-content">
</sec>
        <sec id="multivariate-skew-normal-nb-2">
          <title>Multivariate Skew-Normal</title>
        </sec>
        <sec id="cell-292d847bf748a690-nb-2" specific-use="notebook-code">
          <code language="python">

import numpy as np
from scipy.stats import (multivariate_normal as mvn,
                         norm
                         )
from scipy.stats._multivariate import _squeeze_output


class multivariate_skewnorm:
    # from: https://gregorygundersen.com/blog/2020/12/29/multivariate-skew-normal/
    def __init__(self, shape, mean=(0, 0), cov=None):
        self.dim = len(shape)
        self.shape = np.asarray(shape)
        self.mean = np.asarray(mean)
        self.cov = np.eye(self.dim) if cov is None else np.asarray(cov)

    def pdf(self, x):
        return np.exp(self.logpdf(x))

    def logpdf(self, x):
        x = mvn._process_quantiles(x, self.dim)
        pdf = mvn(self.mean, self.cov).logpdf(x)
        cdf = norm(0, 1).logcdf(np.dot(x, self.shape))
        return _squeeze_output(np.log(2) + pdf + cdf)

    def rvs_slow(self, size=1):
        # K-variate normal density
        std_mvn = mvn(self.mean,
                      self.cov
                      )
        x = np.empty((size, self.dim))

        # Apply rejection sampling.
        n_samples = 0
        while n_samples &lt; size:
            z = std_mvn.rvs(size=1)
            u = np.random.uniform(0, 2 * std_mvn.pdf(z))
            if not u &gt; self.pdf(z):
                x[n_samples] = z
                n_samples += 1

        # Rescale based on correlation matrix.
        # chol = np.linalg.cholesky(self.cov)
        # x = (chol @ x.T).T

        return x

    def rvs_fast(self, size=1):
        aCa = self.shape @ self.cov @ self.shape
        delta = (1 / np.sqrt(1 + aCa)) * self.cov @ self.shape
        cov_star = np.block([[np.ones(1), delta],
                             [delta[:, None], self.cov]]
                            )
        x = mvn(np.zeros(self.dim + 1), cov_star).rvs(size)
        x0, x1 = x[:, 0], x[:, 1:]
        inds = x0 &lt;= 0
        x1[inds] = -1 * x1[inds]
        return x1


def estimate_moments(samples):
    # Calculate sample mean
    sample_mean = np.mean(samples, axis=0)

    # Calculate sample covariance matrix
    sample_cov_matrix = np.cov(samples, rowvar=False)

    # Center the samples
    centered_samples = samples - sample_mean

    # Calculate skewness matrix using the centered samples
    skewness_matrix = np.mean(centered_samples ** 3, axis=0) / np.std(centered_samples, axis=0) ** 3

    return sample_mean, sample_cov_matrix, skewness_matrix
  </code>
        </sec>
        <sec id="cell-3cec416714bef259-nb-2" specific-use="notebook-code">
          <code language="python">estimated_mean, estimated_cov_matrix, estimated_skewness = estimate_moments(
    test_data[['ISOPleasant', 'ISOEventful']].to_numpy()
    )

print("Estimated Mean:", estimated_mean)
print("Estimated Covariance Matrix:")
print(estimated_cov_matrix)
print("Estimated Skewness:", estimated_skewness)

targets = {
    'mean': (0.224, 0.377),
    'cov' : np.array([[0.099, -0.018], [-0.0183, 0.0827]]),
    'skew': (0.089, -0.083)
    }

test_df = multivariate_skewnorm(shape=estimated_skewness, cov=estimated_cov_matrix, mean=estimated_mean).rvs_slow(1000)
# test_df = multivariate_skewnorm(shape=targets['skew'], cov=targets['cov'], mean=targets['mean']).rvs_slow(1000)

test_df = pd.DataFrame(test_df, columns=['ISOPleasant', 'ISOEventful'])

sspy.plotting.jointplot(test_df)</code>
          <sec id="cell-3cec416714bef259-output-0-nb-2" specific-use="notebook-output">
            <preformat>Estimated Mean: [ 0.27909904 -0.03652308]
Estimated Covariance Matrix:
[[ 0.18122578 -0.02137291]
 [-0.02137291  0.06742474]]
Estimated Skewness: [-0.45149117  0.73468857]</preformat>
          </sec>
          <sec id="cell-3cec416714bef259-output-1-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-28-output-2.png"/>
          </sec>
        </sec>
        <sec id="d221ef9a936f12af-nb-2" specific-use="notebook-code">
          <code language="python">sspy.plotting.jointplot(test_data)</code>
          <sec id="d221ef9a936f12af-output-0-nb-2" specific-use="notebook-output">
            <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-29-output-1.png"/>
          </sec>
        </sec>
        <sec id="cell-5a86f0d68a0d5f25-nb-2" specific-use="notebook-code">
          <code language="python">spi(sspy.isd.select_location_ids(data, 'SanMarco'), test_df)</code>
          <sec id="cell-5a86f0d68a0d5f25-output-0-nb-2" specific-use="notebook-output">
            <preformat>46</preformat>
          </sec>
        </sec>
        <sec id="fc5478f50dcf4a65-nb-2" specific-use="notebook-content">
          <sec id="r-sn-nb-2">
            <title>R SN</title>
          </sec>
          <sec id="c0aa8bc4c9c8561c-nb-2" specific-use="notebook-code">
            <code language="python">import rpyskewnorm as snpy

sigma = np.array([[1, 0.4], [0.4, 0.6]])
mean = (0, -1)
skew = (0, -0.6)
beta, omega, alpha = snpy.skewnormal_parms_2d(mean, sigma, skew)
print(beta, omega, alpha)
y = snpy.rnd_skewnormal_2d(beta, omega, alpha, size=20)</code>
            <sec id="c0aa8bc4c9c8561c-output-0-nb-2" specific-use="notebook-output">
              <preformat>[ 0.         -0.13389297] [[1.         0.4       ]
 [0.4        1.35014139]] [  3.66054584 -10.63348162]</preformat>
            </sec>
            <sec id="c0aa8bc4c9c8561c-output-1-nb-2" specific-use="notebook-output">
              <preformat>NameError: name 'mean' is not defined</preformat>
            </sec>
          </sec>
          <sec id="a88f1514ff064590-nb-2" specific-use="notebook-code">
            <code language="python">mean = test_data['ISOEventful'].mean()
std = test_data['ISOEventful'].std()
skew = test_data['ISOEventful'].skew()
print(mean, std, skew)

beta, omega, alpha = snpy.skewnormal_parms(mean, std, skew)
print(beta, omega, alpha)
y = snpy.rnd_skewnormal(beta, omega, alpha, size=1000)

# plot the pdfs
plt.figure()
plt.hist(y, bins=100, density=True, alpha=0.6, color='g')
plt.hist(test_data['ISOEventful'], bins=21, density=True, alpha=0.6, color='r')
xmin, xmax = plt.xlim()
x = np.linspace(xmin, xmax, 100)
plt.show()</code>
            <sec id="a88f1514ff064590-output-0-nb-2" specific-use="notebook-output">
              <preformat>-0.03652307692307693 0.2596627369069606 0.745484116696089
-0.3486524345620716 0.4060165918261776 3.598957128011734</preformat>
            </sec>
            <sec id="a88f1514ff064590-output-1-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-32-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-86519061af507df-nb-2" specific-use="notebook-content">
  </sec>
          <sec id="end-nb-2">
            <title>End</title>
          </sec>
          <sec id="cell-8bd88768dd48a512-nb-2" specific-use="notebook-code">
            <code language="python">import numpy as np


def multivariate_skew_normal(mean, cov_matrix, skewness, size=1):
    dim = len(mean)

    # Generate samples from the multivariate normal distribution
    normal_samples = multivariate_normal.rvs(mean=mean, cov=cov_matrix, size=size)

    # Generate samples from the skewness distribution
    skew_samples = skewnorm.rvs(skewness, size=(size, dim))

    # Combine the normal samples and skew samples
    skewed_samples = normal_samples + skew_samples

    return skewed_samples


# Example usage:
mean_vector = np.array([1, 0])
covariance_matrix = np.array([[1, 0.9], [0.9, 1]])
skewness_parameter = 2

samples = multivariate_skew_normal(mean_vector, covariance_matrix, skewness_parameter, size=1000)

print("Sample Mean:", np.mean(samples, axis=0))
print("Sample Covariance Matrix:")
print(np.cov(samples, rowvar=False))
    </code>
            <sec id="cell-8bd88768dd48a512-output-0-nb-2" specific-use="notebook-output">
              <preformat>Sample Mean: [1.70380847 0.66459427]
Sample Covariance Matrix:
[[1.55894132 0.93562762]
 [0.93562762 1.54235095]]</preformat>
            </sec>
          </sec>
          <sec id="cell-10f358320ca5bce2-nb-2" specific-use="notebook-code">
            <code language="python">test_df = pd.DataFrame(samples, columns=['x', 'y'])
sns.jointplot(data=test_df, x='x', y='y', kind='kde')</code>
            <sec id="cell-10f358320ca5bce2-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-34-output-1.png"/>
            </sec>
          </sec>
          <sec id="a9f70070ac3e5815-nb-2" specific-use="notebook-code">
            <code language="python">samples = multivariate_skew_normal(
        mean=test_data[['ISOPleasant', 'ISOEventful']].mean().to_numpy(),
        cov_matrix=test_data[['ISOPleasant', 'ISOEventful']].cov().to_numpy(),
        skewness=0,
        size=1000
        )

samples = pd.DataFrame(samples, columns=['x', 'y'])
sns.jointplot(data=samples, x='x', y='y', kind='kde')</code>
            <sec id="a9f70070ac3e5815-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-35-output-1.png"/>
            </sec>
          </sec>
          <sec id="e0c3a556b0ef50e-nb-2" specific-use="notebook-code">
            <code language="python">import numpy as np
from scipy.stats import multivariate_normal, skewnorm
from scipy.optimize import minimize


def fit_multivariate_skew_normal(samples):
    dim = samples.shape[1]

    # Function to minimize (negative log-likelihood)
    def negative_log_likelihood(params):
        mean = params[:dim]
        cov_matrix = np.diag(np.exp(params[dim:2 * dim]))
        skewness = params[2 * dim:]

        # Calculate log-likelihood
        normal_density = multivariate_normal.logpdf(samples, mean=mean, cov=cov_matrix)
        skew_density = skewnorm.logpdf((samples - mean) / np.sqrt(np.diag(cov_matrix)), skewness)

        return -np.sum(normal_density + skew_density)

    # Initial guess for parameters
    initial_params = np.concatenate(
            [samples.mean(axis=0), np.log(np.diag(np.cov(samples, rowvar=False))), np.zeros(dim)]
            )

    # Optimize the negative log-likelihood
    result = minimize(negative_log_likelihood, initial_params, method='L-BFGS-B')

    # Extract parameters from the optimized result
    fitted_mean = result.x[:dim]
    fitted_cov_matrix = np.diag(np.exp(result.x[dim:2 * dim]))
    fitted_skewness = result.x[2 * dim:]

    return fitted_mean, fitted_cov_matrix, fitted_skewness


# Example usage:
# Assume 'data' is a 2D array of samples
data = np.random.multivariate_normal(mean=[2, 3], cov=[[1, 0.5], [0.5, 2]], size=1000)
fit_mean, fit_cov_matrix, fit_skewness = fit_multivariate_skew_normal(data)

print("Fitted Mean:", fit_mean)
print("Fitted Covariance Matrix:")
print(fit_cov_matrix)
print("Fitted Skewness:", fit_skewness)
    </code>
            <sec id="e0c3a556b0ef50e-output-0-nb-2" specific-use="notebook-output">
              <preformat>ValueError: operands could not be broadcast together with shapes (1000,) (1000,2) </preformat>
            </sec>
          </sec>
          <sec id="cell-34fbc5699dad57ad-nb-2" specific-use="notebook-code">
            <code language="python">sample = multivariate_normal.rvs([2, 3], [[1, 0.5], [0.5, 2]]) + skewnorm.rvs([2, -1])
sample[0] &lt; 1 and sample[1] &lt; 1 and sample[0] &gt; -1 and sample[1] &gt; -1</code>
            <sec id="cell-34fbc5699dad57ad-output-0-nb-2" specific-use="notebook-output">
              <preformat>True</preformat>
            </sec>
          </sec>
          <sec id="d24265db8caafeca-nb-2" specific-use="notebook-code">
            <code language="python">import numpy as np
from scipy.stats import multivariate_normal, skewnorm


def sample_bivariate_skew_normal(size, location, covariance, skewness, a=-1, b=1):
    # Rejection sampling
    samples = []
    while len(samples) &lt; size:
        candidate = multivariate_normal.rvs(mean=location, cov=covariance) * skewnorm.rvs(skewness)
        if a &lt;= candidate[0] &lt;= b and a &lt;= candidate[1] &lt;= b:
            samples.append(candidate)

    return samples


# Example usage:
size = 1000
location = [0.5, -0.5]
covariance = [[1, 0.5], [0.5, 2]]
skewness = [2, -1]

samples = sample_bivariate_skew_normal(size, location, covariance, skewness)

# Print mean and covariance matrix of the generated samples
print("Sample Mean:", np.mean(samples, axis=0))
print("Sample Covariance Matrix:")
print(np.cov(samples, rowvar=False))
    </code>
            <sec id="d24265db8caafeca-output-0-nb-2" specific-use="notebook-output">
              <preformat>Sample Mean: [0.09059921 0.0597697 ]
Sample Covariance Matrix:
[[ 0.1769003  -0.00457141]
 [-0.00457141  0.20086224]]</preformat>
            </sec>
          </sec>
          <sec id="cell-50f4f68bece18034-nb-2" specific-use="notebook-code">
            <code language="python">import numpy as np


def estimate_moments(samples):
    # Calculate sample mean
    sample_mean = np.mean(samples, axis=0)

    # Calculate sample covariance matrix
    sample_cov_matrix = np.cov(samples, rowvar=False)

    # Center the samples
    centered_samples = samples - sample_mean

    # Calculate skewness matrix using the centered samples
    skewness_matrix = np.mean(centered_samples ** 3, axis=0) / np.std(centered_samples, axis=0) ** 3

    return sample_mean, sample_cov_matrix, skewness_matrix


# Example usage:
# Assume 'data' is a 2D array of samples
data = np.random.multivariate_normal(mean=[0.5, -0.5], cov=[[1, 0.5], [0.5, 2]], size=1000)

# Estimate moments
estimated_mean, estimated_cov_matrix, estimated_skewness = estimate_moments(data)

print("Estimated Mean:", estimated_mean)
print("Estimated Covariance Matrix:")
print(estimated_cov_matrix)
print("Estimated Skewness:", estimated_skewness)
    </code>
            <sec id="cell-50f4f68bece18034-output-0-nb-2" specific-use="notebook-output">
              <preformat>Estimated Mean: [ 0.43266242 -0.56365521]
Estimated Covariance Matrix:
[[1.01840587 0.47906665]
 [0.47906665 1.90171325]]
Estimated Skewness: [0.04232562 0.19124746]</preformat>
            </sec>
          </sec>
          <sec id="a8267402d7431d7a-nb-2" specific-use="notebook-code">
            <code language="python">estimated_mean, estimated_cov_matrix, estimated_skewness = estimate_moments(
    test_data[['ISOPleasant', 'ISOEventful']].to_numpy()
    )

print("Estimated Mean:", estimated_mean)
print("Estimated Covariance Matrix:")
print(estimated_cov_matrix)
print("Estimated Skewness:", estimated_skewness)
    </code>
            <sec id="a8267402d7431d7a-output-0-nb-2" specific-use="notebook-output">
              <preformat>Estimated Mean: [0.25715484 0.07943226]
Estimated Covariance Matrix:
[[ 0.15379664 -0.02063052]
 [-0.02063052  0.08202177]]
Estimated Skewness: [-0.36778486 -0.40921456]</preformat>
            </sec>
          </sec>
          <sec id="f06a00fcb4bf427e-nb-2" specific-use="notebook-code">
            <code language="python">data = sample_bivariate_skew_normal(location=estimated_mean, covariance=estimated_cov_matrix,
                                    skewness=estimated_skewness, size=1000
                                    )

data = pd.DataFrame(data, columns=['ISOPleasant', 'ISOEventful'])

sspy.plotting.jointplot(data)</code>
            <sec id="f06a00fcb4bf427e-output-0-nb-2" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="skewnorm_test_files/figure-jats/cell-41-output-1.png"/>
            </sec>
          </sec>
          <sec id="cell-20168b3903880212-nb-2" specific-use="notebook-code">
            <code language="python">data</code>
            <sec id="cell-20168b3903880212-output-0-nb-2" specific-use="notebook-output">
              <table-wrap>
                <table border="1">
                  <thead>
                    <tr style="text-align: right;">
                      <th/>
                      <th>ISOPleasant</th>
                      <th>ISOEventful</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>0</td>
                      <td>0.273049</td>
                      <td>0.076969</td>
                    </tr>
                    <tr>
                      <td>1</td>
                      <td>0.302629</td>
                      <td>-0.203748</td>
                    </tr>
                    <tr>
                      <td>2</td>
                      <td>-0.463852</td>
                      <td>-0.063422</td>
                    </tr>
                    <tr>
                      <td>3</td>
                      <td>-0.121700</td>
                      <td>-0.037437</td>
                    </tr>
                    <tr>
                      <td>4</td>
                      <td>-0.576033</td>
                      <td>-0.138067</td>
                    </tr>
                    <tr>
                      <td>...</td>
                      <td>...</td>
                      <td>...</td>
                    </tr>
                    <tr>
                      <td>995</td>
                      <td>0.030473</td>
                      <td>0.245347</td>
                    </tr>
                    <tr>
                      <td>996</td>
                      <td>0.011258</td>
                      <td>-0.212560</td>
                    </tr>
                    <tr>
                      <td>997</td>
                      <td>-0.180243</td>
                      <td>-0.952178</td>
                    </tr>
                    <tr>
                      <td>998</td>
                      <td>-0.151068</td>
                      <td>0.062439</td>
                    </tr>
                    <tr>
                      <td>999</td>
                      <td>-0.541194</td>
                      <td>0.014941</td>
                    </tr>
                  </tbody>
                </table>
              </table-wrap>
            </sec>
          </sec>
        </sec>
      </sec>
    </body>
    <back>
</back>
  </sub-article>
  <!-- (F2ED4C6E)[nb-3]:/Users/mitch/Library/CloudStorage/OneDrive-UniversityCollegeLondon/_Fellowship/Papers - Drafts/J2401_JASA_SSID-Single-Index/SingleIndex-Code.ipynb -->
  <sub-article article-type="notebook" id="nb-2-nb-4">
    <front-stub>
      <title-group>
        <article-title>Grid Search Target Optimization</article-title>
      </title-group>
    </front-stub>
    <body>
      <sec id="cell-1-nb-4" specific-use="notebook-code">
        <code language="python">import warnings
from pathlib import Path

import numpy as np
import pandas as pd
import soundscapy as sspy
from soundscapy.utils.parameters import LANGUAGE_ANGLES, PAQ_IDS

import optimize_target as ot
from MultiSkewNorm import MultiSkewNorm

warnings.filterwarnings("ignore")</code>
        <sec id="cell-1-output-0-nb-4" specific-use="notebook-output">
          <preformat>/Users/mitch/Library/CloudStorage/OneDrive-UniversityCollegeLondon/_Fellowship/Papers - Drafts/J2401_JASA_SSID-Single-Index/.venv/lib/python3.11/site-packages/rpy2/robjects/numpy2ri.py:252: DeprecationWarning: The global conversion available with activate() is deprecated and will be removed in the next major release. Use a local converter.
  warnings.warn('The global conversion available with activate() '
/Users/mitch/Library/CloudStorage/OneDrive-UniversityCollegeLondon/_Fellowship/Papers - Drafts/J2401_JASA_SSID-Single-Index/.venv/lib/python3.11/site-packages/rpy2/robjects/pandas2ri.py:368: DeprecationWarning: The global conversion available with activate() is deprecated and will be removed in the next major release. Use a local converter.
  warnings.warn('The global conversion available with activate() '</preformat>
        </sec>
      </sec>
      <sec id="cell-2-nb-4" specific-use="notebook-code">
        <code language="python"># Load latest ISD dataset
# data = sspy.isd.load_zenodo()
# Load latest ISD dataset
isd_file = Path("ISD v1.0 Data.csv")

data = pd.read_csv(isd_file, low_memory=False)
data, excl_data = sspy.isd.validate(data)
data = data.query("Language != 'cmn'")

# Exclude RegentsParkJapan outliers
# excl_id = list(data.query("LocationID == 'RegentsParkJapan'").query("ISOEventful &gt; 0.72 | ISOEventful &lt; -0.5").index)
# Excluded RegentsParkFields outliers
# excl_id = excl_id + list(data.query("LocationID == 'RegentsParkFields' and ISOPleasant &lt; 0").index) # Helicopters
excl_id = [652, 706, 548, 550, 551, 553, 569, 580, 609, 618, 623, 636, 643]
data.drop(excl_id, inplace=True)
data</code>
        <sec id="cell-2-output-0-nb-4" specific-use="notebook-output">
          <preformat>Renaming PAQ columns.
Checking PAQ data quality.
Identified 109 samples to remove.
[6, 9, 13, 30, 32, 46, 190, 213, 229, 244, 296, 412, 413, 428, 464, 485, 655, 734, 739, 762, 766, 780, 1067, 1274, 1290, 1316, 1320, 1338, 1346, 1347, 1397, 1425, 1431, 1446, 1447, 1470, 1485, 1491, 1504, 1505, 1510, 1512, 1517, 1522, 1523, 1527, 1599, 1698, 1734, 1817, 1911, 1948, 2069, 2107, 2109, 2111, 2150, 2199, 2277, 2293, 2384, 2386, 2490, 2523, 2584, 2592, 2695, 2762, 2767, 2783, 2789, 2825, 2826, 2832, 2840, 2856, 2859, 2879, 2883, 2889, 2910, 2932, 2956, 2969, 3031, 3058, 3077, 3124, 3149, 3163, 3185, 3202, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3272, 3302, 3365, 3414, 3491, 3502, 3510, 3517, 3533, 3583]</preformat>
        </sec>
        <sec id="cell-2-output-1-nb-4" specific-use="notebook-output">
          <table-wrap>
            <table border="1">
              <thead>
                <tr style="text-align: right;">
                  <th/>
                  <th>LocationID</th>
                  <th>SessionID</th>
                  <th>GroupID</th>
                  <th>RecordID</th>
                  <th>start_time</th>
                  <th>end_time</th>
                  <th>latitude</th>
                  <th>longitude</th>
                  <th>Language</th>
                  <th>Survey_Version</th>
                  <th>...</th>
                  <th>RA_cp90</th>
                  <th>RA_cp95</th>
                  <th>THD_THD</th>
                  <th>THD_Min</th>
                  <th>THD_Max</th>
                  <th>THD_L5</th>
                  <th>THD_L10</th>
                  <th>THD_L50</th>
                  <th>THD_L90</th>
                  <th>THD_L95</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>0</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV12</td>
                  <td>1434</td>
                  <td>2019-05-16 18:46:00</td>
                  <td>2019-05-16 18:56:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>8.15</td>
                  <td>6.72</td>
                  <td>-0.09</td>
                  <td>-11.76</td>
                  <td>54.18</td>
                  <td>34.82</td>
                  <td>26.53</td>
                  <td>5.57</td>
                  <td>-9.00</td>
                  <td>-10.29</td>
                </tr>
                <tr>
                  <td>1</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV12</td>
                  <td>1435</td>
                  <td>2019-05-16 18:46:00</td>
                  <td>2019-05-16 18:56:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>8.15</td>
                  <td>6.72</td>
                  <td>-0.09</td>
                  <td>-11.76</td>
                  <td>54.18</td>
                  <td>34.82</td>
                  <td>26.53</td>
                  <td>5.57</td>
                  <td>-9.00</td>
                  <td>-10.29</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1430</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1431</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>4</td>
                  <td>CarloV</td>
                  <td>CarloV2</td>
                  <td>2CV13</td>
                  <td>1432</td>
                  <td>2019-05-16 19:02:00</td>
                  <td>2019-05-16 19:12:00</td>
                  <td>37.17685</td>
                  <td>-3.590392</td>
                  <td>eng</td>
                  <td>engISO2018</td>
                  <td>...</td>
                  <td>5.00</td>
                  <td>3.91</td>
                  <td>-2.10</td>
                  <td>-19.32</td>
                  <td>72.52</td>
                  <td>32.33</td>
                  <td>24.52</td>
                  <td>0.25</td>
                  <td>-16.30</td>
                  <td>-17.33</td>
                </tr>
                <tr>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                </tr>
                <tr>
                  <td>1693</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP161</td>
                  <td>61</td>
                  <td>2020-03-11 12:42:00</td>
                  <td>2020-03-11 12:55:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>2.54</td>
                  <td>2.00</td>
                  <td>-3.17</td>
                  <td>-11.97</td>
                  <td>59.64</td>
                  <td>37.87</td>
                  <td>26.54</td>
                  <td>6.33</td>
                  <td>-9.79</td>
                  <td>-10.34</td>
                </tr>
                <tr>
                  <td>1694</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>63</td>
                  <td>2020-03-11 12:39:00</td>
                  <td>2020-03-11 13:00:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1695</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>62</td>
                  <td>2020-03-11 12:54:00</td>
                  <td>2020-03-11 12:58:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1696</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP162</td>
                  <td>64</td>
                  <td>2020-03-11 12:56:00</td>
                  <td>2020-03-11 12:59:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>NaN</td>
                </tr>
                <tr>
                  <td>1697</td>
                  <td>Noorderplantsoen</td>
                  <td>Noorderplantsoen1</td>
                  <td>NP163</td>
                  <td>70</td>
                  <td>2020-03-11 23:08:00</td>
                  <td>2020-03-11 23:18:00</td>
                  <td>NaN</td>
                  <td>NaN</td>
                  <td>nld</td>
                  <td>nldSSIDv1</td>
                  <td>...</td>
                  <td>2.58</td>
                  <td>1.99</td>
                  <td>-3.20</td>
                  <td>-9.67</td>
                  <td>57.99</td>
                  <td>35.54</td>
                  <td>29.32</td>
                  <td>8.86</td>
                  <td>-5.61</td>
                  <td>-6.71</td>
                </tr>
              </tbody>
            </table>
          </table-wrap>
        </sec>
      </sec>
      <sec id="cell-3-nb-4" specific-use="notebook-code">
        <code language="python">for i, row in data.iterrows():
    lang = row["Language"]
    angles = LANGUAGE_ANGLES[lang]
    iso_pl, iso_ev = (
        sspy.surveys.adj_iso_pl(row[PAQ_IDS], angles, scale=4),
        sspy.surveys.adj_iso_ev(row[PAQ_IDS], angles, scale=4),
    )
    data.loc[i, "ISOPleasant"] = iso_pl
    data.loc[i, "ISOEventful"] = iso_ev</code>
      </sec>
      <sec id="cell-4-nb-4" specific-use="notebook-code">
        <code language="python">parks = [
    "RegentsParkFields",
    "RegentsParkJapan",
    "Noorderplantsoen",
    "StPaulsCross",
    "MiradorSanNicolas",
    "RussellSq",
    "Noorderplantsoen",
    "MonumentoGaribaldi",
    "CampoPrincipe",
]

not_parks = [
    "MarchmontGarden",
    "PancrasLock",
    "TateModern",
    "PlazaBibRambla",
    "SanMarco",
    "StPaulsRow",
    "CarloV",
    "CamdenTown",
    "EustonTap",
    "TorringtonSq",
]

park_data = data.query("LocationID in @parks")
not_park_data = data.query("LocationID in @not_parks")

rank_on = "sss01"</code>
      </sec>
      <sec id="cell-5-nb-4" specific-use="notebook-code">
        <code language="python">park_quality = pd.DataFrame(
    park_data.groupby("LocationID")[rank_on].mean().sort_values(ascending=False)
)
park_quality["Rank"] = range(1, len(park_quality) + 1)
park_quality</code>
        <sec id="cell-5-output-0-nb-4" specific-use="notebook-output">
          <table-wrap>
            <table border="1">
              <thead>
                <tr style="text-align: right;">
                  <th/>
                  <th>sss01</th>
                  <th>Rank</th>
                </tr>
                <tr>
                  <th>LocationID</th>
                  <th/>
                  <th/>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>RegentsParkJapan</td>
                  <td>4.617978</td>
                  <td>1</td>
                </tr>
                <tr>
                  <td>RegentsParkFields</td>
                  <td>4.467290</td>
                  <td>2</td>
                </tr>
                <tr>
                  <td>CampoPrincipe</td>
                  <td>4.345455</td>
                  <td>3</td>
                </tr>
                <tr>
                  <td>MonumentoGaribaldi</td>
                  <td>4.156250</td>
                  <td>4</td>
                </tr>
                <tr>
                  <td>RussellSq</td>
                  <td>4.020690</td>
                  <td>5</td>
                </tr>
                <tr>
                  <td>MiradorSanNicolas</td>
                  <td>3.964286</td>
                  <td>6</td>
                </tr>
                <tr>
                  <td>StPaulsCross</td>
                  <td>3.803030</td>
                  <td>7</td>
                </tr>
                <tr>
                  <td>Noorderplantsoen</td>
                  <td>2.412371</td>
                  <td>8</td>
                </tr>
              </tbody>
            </table>
          </table-wrap>
        </sec>
      </sec>
      <sec id="cell-6-nb-4" specific-use="notebook-code">
        <code language="python">not_park_quality = pd.DataFrame(
    not_park_data.groupby("LocationID")[rank_on].mean().sort_values(ascending=False)
)
not_park_quality["Rank"] = range(1, len(not_park_quality) + 1)
not_park_quality</code>
        <sec id="cell-6-output-0-nb-4" specific-use="notebook-output">
          <table-wrap>
            <table border="1">
              <thead>
                <tr style="text-align: right;">
                  <th/>
                  <th>sss01</th>
                  <th>Rank</th>
                </tr>
                <tr>
                  <th>LocationID</th>
                  <th/>
                  <th/>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>CarloV</td>
                  <td>4.344828</td>
                  <td>1</td>
                </tr>
                <tr>
                  <td>PlazaBibRambla</td>
                  <td>4.333333</td>
                  <td>2</td>
                </tr>
                <tr>
                  <td>TateModern</td>
                  <td>3.827815</td>
                  <td>3</td>
                </tr>
                <tr>
                  <td>StPaulsRow</td>
                  <td>3.736111</td>
                  <td>4</td>
                </tr>
                <tr>
                  <td>SanMarco</td>
                  <td>3.557895</td>
                  <td>5</td>
                </tr>
                <tr>
                  <td>MarchmontGarden</td>
                  <td>3.548077</td>
                  <td>6</td>
                </tr>
                <tr>
                  <td>PancrasLock</td>
                  <td>3.500000</td>
                  <td>7</td>
                </tr>
                <tr>
                  <td>TorringtonSq</td>
                  <td>3.283186</td>
                  <td>8</td>
                </tr>
                <tr>
                  <td>CamdenTown</td>
                  <td>2.838095</td>
                  <td>9</td>
                </tr>
                <tr>
                  <td>EustonTap</td>
                  <td>2.760417</td>
                  <td>10</td>
                </tr>
              </tbody>
            </table>
          </table-wrap>
        </sec>
      </sec>
      <sec id="cell-7-nb-4" specific-use="notebook-code">
        <code language="python">quality = pd.DataFrame(
    data.groupby("LocationID")[rank_on].mean().sort_values(ascending=False)
)
quality["Rank"] = range(1, len(quality) + 1)
quality</code>
        <sec id="cell-7-output-0-nb-4" specific-use="notebook-output">
          <table-wrap>
            <table border="1">
              <thead>
                <tr style="text-align: right;">
                  <th/>
                  <th>sss01</th>
                  <th>Rank</th>
                </tr>
                <tr>
                  <th>LocationID</th>
                  <th/>
                  <th/>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>RegentsParkJapan</td>
                  <td>4.617978</td>
                  <td>1</td>
                </tr>
                <tr>
                  <td>RegentsParkFields</td>
                  <td>4.467290</td>
                  <td>2</td>
                </tr>
                <tr>
                  <td>CampoPrincipe</td>
                  <td>4.345455</td>
                  <td>3</td>
                </tr>
                <tr>
                  <td>CarloV</td>
                  <td>4.344828</td>
                  <td>4</td>
                </tr>
                <tr>
                  <td>PlazaBibRambla</td>
                  <td>4.333333</td>
                  <td>5</td>
                </tr>
                <tr>
                  <td>MonumentoGaribaldi</td>
                  <td>4.156250</td>
                  <td>6</td>
                </tr>
                <tr>
                  <td>RussellSq</td>
                  <td>4.020690</td>
                  <td>7</td>
                </tr>
                <tr>
                  <td>MiradorSanNicolas</td>
                  <td>3.964286</td>
                  <td>8</td>
                </tr>
                <tr>
                  <td>TateModern</td>
                  <td>3.827815</td>
                  <td>9</td>
                </tr>
                <tr>
                  <td>StPaulsCross</td>
                  <td>3.803030</td>
                  <td>10</td>
                </tr>
                <tr>
                  <td>StPaulsRow</td>
                  <td>3.736111</td>
                  <td>11</td>
                </tr>
                <tr>
                  <td>SanMarco</td>
                  <td>3.557895</td>
                  <td>12</td>
                </tr>
                <tr>
                  <td>MarchmontGarden</td>
                  <td>3.548077</td>
                  <td>13</td>
                </tr>
                <tr>
                  <td>PancrasLock</td>
                  <td>3.500000</td>
                  <td>14</td>
                </tr>
                <tr>
                  <td>TorringtonSq</td>
                  <td>3.283186</td>
                  <td>15</td>
                </tr>
                <tr>
                  <td>CamdenTown</td>
                  <td>2.838095</td>
                  <td>16</td>
                </tr>
                <tr>
                  <td>EustonTap</td>
                  <td>2.760417</td>
                  <td>17</td>
                </tr>
                <tr>
                  <td>Noorderplantsoen</td>
                  <td>2.412371</td>
                  <td>18</td>
                </tr>
              </tbody>
            </table>
          </table-wrap>
        </sec>
      </sec>
      <sec id="cell-9-nb-4" specific-use="notebook-code">
        <code language="python"># tgt = MultiSkewNorm()
# tgt.define_dp(
#     np.array([0.5, 0.7]),
#     np.array([[0.1, 0.05], [0.05, 0.1]]),
#     np.array([0, -5]),
# )
# tgt.sample()
# r, wspi, spi_ranks, target = ot.target_success(tgt, quality["Rank"], data)
# print(f"Target: {target}")
</code>
      </sec>
      <sec id="cell-10-nb-4" specific-use="notebook-code">
        <code language="python"># omega_grid = ot.construct_omega_grid(
#     variance_range=(0, 0.5),
#     variance_n=10,
#     covariance_range=(-1, 1),
#     covariance_n=10,
# )

# targets = ot.construct_target_grid(
#     omega_grid,
#     xi_range=(-1, 1),
#     xi_n=2,
#     alpha_range=(-1, 1),
#     alpha_n=2,
#     sample_n=100,
# )

# print(len(targets))</code>
      </sec>
      <sec id="cell-11-nb-4" specific-use="notebook-code">
        <code language="python"># r_res, wspi_res, targets_res = ot.run_grid(
#     targets, quality.sort_index()["Rank"], data, "LocationID"
# )
# plt.plot(r_res, wspi_res, "o")</code>
      </sec>
      <sec id="cell-12-nb-4" specific-use="notebook-code">
        <code language="python"># comb_res = [r_res[i] * wspi_res[i] for i in range(len(r_res))]
# best_target = targets[np.argmax(comb_res)]
# print(r_res[np.argmax(comb_res)])
# print(wspi_res[np.argmax(comb_res)])

# print(best_target.summary())
# best_target.sspy_plot()</code>
      </sec>
      <sec id="cell-13-nb-4" specific-use="notebook-code">
        <code language="python"># fig, ax = plt.subplots(figsize=(6, 6))

# sspy.plotting.density(
#     x=best_target.sample_data[:, 0],
#     y=best_target.sample_data[:, 1],
#     ax=ax,
#     incl_scatter=False,
#     density_type="full",
#     title="",
# )

# sspy.plotting.density(
#     sspy.isd.select_location_ids(data, "CarloV"),
#     ax=ax,
#     density_type="simple",
#     title=f"CarloV\nSPI = {best_target.spi(sspy.isd.select_location_ids(data, 'CarloV')[['ISOPleasant', 'ISOEventful']])}",
# )</code>
      </sec>
      <sec id="cell-14-nb-4" specific-use="notebook-content">
        <sec id="pymoo-multi-objective-optimization-nb-4">
          <title><monospace>pymoo</monospace> Multi-objective
  Optimization</title>
          <p>Defining the optimization problem:</p>
          <list list-type="bullet">
            <list-item>
              <p>max <inline-formula><alternatives><tex-math><![CDATA[r(ranks_{quality}, ranks_{target})]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
            <list-item>
              <p>max <inline-formula><alternatives><tex-math><![CDATA[mean(SPI_{target}(X_i))]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
          </list>
          <p>where <inline-formula><alternatives><tex-math><![CDATA[r]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula>
  is the rank correlation coefficient, <inline-formula><alternatives><tex-math><![CDATA[ranks_{quality}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives><tex-math><![CDATA[ranks_{target}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  are the ranks of the quality and target values, and
  <inline-formula><alternatives><tex-math><![CDATA[SPI_{target}(X_i)]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is the SPI for a given target on the data for the
  <inline-formula><alternatives><tex-math><![CDATA[i]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>-th
  location. Therefore we are trying to achieve the best correlation
  between the desired ranking and the ranking produced by
  <inline-formula><alternatives><tex-math><![CDATA[SPI_{target}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  <italic>and</italic> to achieve the highest mean
  <inline-formula><alternatives><tex-math><![CDATA[SPI_{target}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.</p>
          <p><inline-formula><alternatives><tex-math><![CDATA[ranks_{quality}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  is pre-defined. <inline-formula><alternatives><tex-math><![CDATA[ranks_{target}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  is calculated by sorting the target values and assigning ranks to
  them. <inline-formula><alternatives><tex-math><![CDATA[SPI_{target}]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  is calculated for each location and target.</p>
          <p>
            <monospace>target_success(target, pre_ranks, data)</monospace>
          </p>
          <p><monospace>target</monospace> =
  <monospace>MultiSkewNorm</monospace>(<inline-formula><alternatives><tex-math><![CDATA[\xi]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>ξ</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives><tex-math><![CDATA[\Omega]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives><tex-math><![CDATA[\alpha]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>α</mml:mi></mml:math></alternatives></inline-formula>)
  parameters</p>
          <list list-type="bullet">
            <list-item>
              <p><inline-formula><alternatives><tex-math><![CDATA[\xi = (\xi_x, \xi_y)]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>ξ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
      <inline-formula><alternatives><tex-math><![CDATA[-1 \leq \xi \leq 1]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ξ</mml:mi><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[\Omega = \begin{pmatrix} var(x) & cov(x, y) \\ cov(y, x) & var(y) \end{pmatrix}]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mi>Ω</mml:mi>
                        <mml:mo>=</mml:mo>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mtable>
                            <mml:mtr>
                              <mml:mtd columnalign="center" style="text-align: center">
                                <mml:mi>v</mml:mi>
                                <mml:mi>a</mml:mi>
                                <mml:mi>r</mml:mi>
                                <mml:mrow>
                                  <mml:mo stretchy="true" form="prefix">(</mml:mo>
                                  <mml:mi>x</mml:mi>
                                  <mml:mo stretchy="true" form="postfix">)</mml:mo>
                                </mml:mrow>
                              </mml:mtd>
                              <mml:mtd columnalign="center" style="text-align: center">
                                <mml:mi>c</mml:mi>
                                <mml:mi>o</mml:mi>
                                <mml:mi>v</mml:mi>
                                <mml:mrow>
                                  <mml:mo stretchy="true" form="prefix">(</mml:mo>
                                  <mml:mi>x</mml:mi>
                                  <mml:mo>,</mml:mo>
                                  <mml:mi>y</mml:mi>
                                  <mml:mo stretchy="true" form="postfix">)</mml:mo>
                                </mml:mrow>
                              </mml:mtd>
                            </mml:mtr>
                            <mml:mtr>
                              <mml:mtd columnalign="center" style="text-align: center">
                                <mml:mi>c</mml:mi>
                                <mml:mi>o</mml:mi>
                                <mml:mi>v</mml:mi>
                                <mml:mrow>
                                  <mml:mo stretchy="true" form="prefix">(</mml:mo>
                                  <mml:mi>y</mml:mi>
                                  <mml:mo>,</mml:mo>
                                  <mml:mi>x</mml:mi>
                                  <mml:mo stretchy="true" form="postfix">)</mml:mo>
                                </mml:mrow>
                              </mml:mtd>
                              <mml:mtd columnalign="center" style="text-align: center">
                                <mml:mi>v</mml:mi>
                                <mml:mi>a</mml:mi>
                                <mml:mi>r</mml:mi>
                                <mml:mrow>
                                  <mml:mo stretchy="true" form="prefix">(</mml:mo>
                                  <mml:mi>y</mml:mi>
                                  <mml:mo stretchy="true" form="postfix">)</mml:mo>
                                </mml:mrow>
                              </mml:mtd>
                            </mml:mtr>
                          </mml:mtable>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p>
                    <inline-formula>
                      <alternatives>
                        <tex-math><![CDATA[0 \leq var() \leq 1]]></tex-math>
                        <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                          <mml:mrow>
                            <mml:mn>0</mml:mn>
                            <mml:mo>≤</mml:mo>
                            <mml:mi>v</mml:mi>
                            <mml:mi>a</mml:mi>
                            <mml:mi>r</mml:mi>
                            <mml:mrow>
                              <mml:mo stretchy="true" form="prefix">(</mml:mo>
                              <mml:mo stretchy="true" form="postfix">)</mml:mo>
                            </mml:mrow>
                            <mml:mo>≤</mml:mo>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                        </mml:math>
                      </alternatives>
                    </inline-formula>
                  </p>
                </list-item>
                <list-item>
                  <p>
                    <inline-formula>
                      <alternatives>
                        <tex-math><![CDATA[-1 \leq cov() \leq 1]]></tex-math>
                        <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                          <mml:mrow>
                            <mml:mo>−</mml:mo>
                            <mml:mn>1</mml:mn>
                            <mml:mo>≤</mml:mo>
                            <mml:mi>c</mml:mi>
                            <mml:mi>o</mml:mi>
                            <mml:mi>v</mml:mi>
                            <mml:mrow>
                              <mml:mo stretchy="true" form="prefix">(</mml:mo>
                              <mml:mo stretchy="true" form="postfix">)</mml:mo>
                            </mml:mrow>
                            <mml:mo>≤</mml:mo>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                        </mml:math>
                      </alternatives>
                    </inline-formula>
                  </p>
                </list-item>
                <list-item>
                  <p><inline-formula><alternatives><tex-math><![CDATA[\Omega]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>
          must be symmetric and positive definite</p>
                </list-item>
              </list>
            </list-item>
            <list-item>
              <p><inline-formula><alternatives><tex-math><![CDATA[\alpha = (\alpha_x, \alpha_y)]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
      <inline-formula><alternatives><tex-math><![CDATA[-5 \leq \alpha \leq 5]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:mo>≤</mml:mo><mml:mi>α</mml:mi><mml:mo>≤</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-1 \leq x, y \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:mi>x</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>y</mml:mi>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
          </list>
        </sec>
        <sec id="cell-15-nb-4" specific-use="notebook-content">
          <p>In <monospace>pymoo</monospace>, each objective function is
  supposed to be minimized. Therefore, we need to convert both SPI and
  r() to minimize problems.</p>
          <list list-type="bullet">
            <list-item>
              <p>min <inline-formula><alternatives><tex-math><![CDATA[-r(ranks_{quality}, ranks_{target})]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
            <list-item>
              <p>min <inline-formula><alternatives><tex-math><![CDATA[-mean(SPI_{target}(X_i))]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mrow><mml:mo>−</mml:mo><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>S</mml:mi><mml:mi>P</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></p>
            </list-item>
          </list>
          <p>The final objective function is:</p>
          <list list-type="bullet">
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[f_1 = -r(ranks_{quality}, ranks_{target})]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:msub>
                          <mml:mi>f</mml:mi>
                          <mml:mn>1</mml:mn>
                        </mml:msub>
                        <mml:mo>=</mml:mo>
                        <mml:mo>−</mml:mo>
                        <mml:mi>r</mml:mi>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mi>r</mml:mi>
                          <mml:mi>a</mml:mi>
                          <mml:mi>n</mml:mi>
                          <mml:mi>k</mml:mi>
                          <mml:msub>
                            <mml:mi>s</mml:mi>
                            <mml:mrow>
                              <mml:mi>q</mml:mi>
                              <mml:mi>u</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>l</mml:mi>
                              <mml:mi>i</mml:mi>
                              <mml:mi>t</mml:mi>
                              <mml:mi>y</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>,</mml:mo>
                          <mml:mi>r</mml:mi>
                          <mml:mi>a</mml:mi>
                          <mml:mi>n</mml:mi>
                          <mml:mi>k</mml:mi>
                          <mml:msub>
                            <mml:mi>s</mml:mi>
                            <mml:mrow>
                              <mml:mi>t</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>r</mml:mi>
                              <mml:mi>g</mml:mi>
                              <mml:mi>e</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[f_2 = -mean(SPI_{target}(X_i))]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:msub>
                          <mml:mi>f</mml:mi>
                          <mml:mn>2</mml:mn>
                        </mml:msub>
                        <mml:mo>=</mml:mo>
                        <mml:mo>−</mml:mo>
                        <mml:mi>m</mml:mi>
                        <mml:mi>e</mml:mi>
                        <mml:mi>a</mml:mi>
                        <mml:mi>n</mml:mi>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mi>S</mml:mi>
                          <mml:mi>P</mml:mi>
                          <mml:msub>
                            <mml:mi>I</mml:mi>
                            <mml:mrow>
                              <mml:mi>t</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>r</mml:mi>
                              <mml:mi>g</mml:mi>
                              <mml:mi>e</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo stretchy="true" form="prefix">(</mml:mo>
                            <mml:msub>
                              <mml:mi>X</mml:mi>
                              <mml:mi>i</mml:mi>
                            </mml:msub>
                            <mml:mo stretchy="true" form="postfix">)</mml:mo>
                          </mml:mrow>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
          </list>
          <p>So our variables to optimize are:</p>
          <list list-type="bullet">
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-1 \leq \xi_x \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:msub>
                          <mml:mi>ξ</mml:mi>
                          <mml:mi>x</mml:mi>
                        </mml:msub>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-1 \leq \xi_y \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:msub>
                          <mml:mi>ξ</mml:mi>
                          <mml:mi>y</mml:mi>
                        </mml:msub>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[0 \leq var(x) \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mn>0</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:mi>v</mml:mi>
                        <mml:mi>a</mml:mi>
                        <mml:mi>r</mml:mi>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mi>x</mml:mi>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[0 \leq var(y) \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mn>0</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:mi>v</mml:mi>
                        <mml:mi>a</mml:mi>
                        <mml:mi>r</mml:mi>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mi>y</mml:mi>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-1 \leq cov(x, y) \leq 1]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:mi>c</mml:mi>
                        <mml:mi>o</mml:mi>
                        <mml:mi>v</mml:mi>
                        <mml:mrow>
                          <mml:mo stretchy="true" form="prefix">(</mml:mo>
                          <mml:mi>x</mml:mi>
                          <mml:mo>,</mml:mo>
                          <mml:mi>y</mml:mi>
                          <mml:mo stretchy="true" form="postfix">)</mml:mo>
                        </mml:mrow>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-5 \leq \alpha_x \leq 5]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>5</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:msub>
                          <mml:mi>α</mml:mi>
                          <mml:mi>x</mml:mi>
                        </mml:msub>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>5</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
            <list-item>
              <p>
                <inline-formula>
                  <alternatives>
                    <tex-math><![CDATA[-5 \leq \alpha_y \leq 5]]></tex-math>
                    <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline">
                      <mml:mrow>
                        <mml:mo>−</mml:mo>
                        <mml:mn>5</mml:mn>
                        <mml:mo>≤</mml:mo>
                        <mml:msub>
                          <mml:mi>α</mml:mi>
                          <mml:mi>y</mml:mi>
                        </mml:msub>
                        <mml:mo>≤</mml:mo>
                        <mml:mn>5</mml:mn>
                      </mml:mrow>
                    </mml:math>
                  </alternatives>
                </inline-formula>
              </p>
            </list-item>
          </list>
          <p>Constraint: - <inline-formula><alternatives><tex-math><![CDATA[\Omega]]></tex-math><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>
  must be symmetric and positive definite -
  <monospace>np.linalg.eigvals(omega) &gt; 0</monospace></p>
        </sec>
        <sec id="cell-16-nb-4" specific-use="notebook-content">
          <sec id="problem-definition-nb-4">
            <title>Problem Definition</title>
          </sec>
          <sec id="cell-17-nb-4" specific-use="notebook-code">
            <code language="python">import pathos
from pymoo.core.callback import Callback
from pymoo.core.problem import ElementwiseProblem, StarmapParallelization
from pymoo.visualization.scatter import Scatter
from pyrecorder.recorder import Recorder
from pyrecorder.writers.streamer import Streamer
from pyrecorder.writers.video import Video
from pymoo.decomposition.asf import ASF


class MyProblem(ElementwiseProblem):
    def __init__(self, data, ranking, **kwargs):
        super().__init__(
            n_var=7,
            n_obj=2,
            n_constr=0,
            xl=np.array([-1, -1, 0, 0, -1, -50, -50]),
            xu=np.array([1, 1, 0.5, 0.5, 1, 50, 50]),
            n_eq_constr=1,
            elementwise_evaluation=True,
            **kwargs,
        )

        self.data = data
        self.ranking = ranking

    def _evaluate(self, X, out, *args, **kwargs):
        h = 1 - int(
            np.all(np.linalg.eigvals(np.array([[X[2], X[4]], [X[4], X[3]]])) &gt; 0)
        )
        out["H"] = h
        if h != 0:
            out["F"] = np.column_stack([0, 0])
            return
        else:
            tgt = MultiSkewNorm()
            tgt.define_dp(
                np.array([X[0], X[1]]),
                np.array([[X[2], X[4]], [X[4], X[3]]]),
                np.array([X[5], X[6]]),
            )
            tgt.sample()
            r, wspi, spi_ranks, target = ot.target_success(tgt, self.ranking, self.data)

            f1 = -r[0]
            f2 = -wspi / 100

            out["F"] = np.column_stack([f1, f2])


class VideoCallback(Callback):
    def __init__(self) -&gt; None:
        super().__init__()
        self.rec = Recorder(Streamer(sleep=0.1))

    def notify(self, algorithm):
        sc = Scatter(
            title="Gen %s" % algorithm.n_gen,
            labels=["spearman", "WSPI"],
        )
        sc.add(algorithm.pop.get("F"))
        sc.do()
        self.rec.record()</code>
          </sec>
          <sec id="cell-18-nb-4" specific-use="notebook-code">
            <code language="python">from pymoo.algorithms.moo.nsga2 import NSGA2
from pymoo.operators.crossover.sbx import SBX
from pymoo.operators.mutation.pm import PM
from pymoo.operators.sampling.rnd import FloatRandomSampling
from pymoo.optimize import minimize
from pymoo.termination.default import DefaultMultiObjectiveTermination

algorithm = NSGA2(
    pop_size=150,
    # n_offsprings=50,
    sampling=FloatRandomSampling(),
    crossover=SBX(),
    mutation=PM(),
    eliminate_duplicates=True,
    # callback=VideoCallback()
)

termination = DefaultMultiObjectiveTermination(n_max_gen=30)
    </code>
          </sec>
          <sec id="cell-19-nb-4" specific-use="notebook-content">
  </sec>
          <sec id="overall-quality-optimization-nb-4">
            <title>Overall Quality optimization</title>
          </sec>
          <sec id="cell-20-nb-4" specific-use="notebook-code">
            <code language="python"># initialize the thread pool and create the runner
mp = pathos.helpers.mp
n_process = 12
pool = mp.Pool(n_process)
runner = StarmapParallelization(pool.starmap)

problem = MyProblem(
    data=data, ranking=quality.sort_index()["Rank"], elementwise_runner=runner
)

res = minimize(
    problem, algorithm, termination, seed=42, save_history=True, verbose=True
)

pool.close()

F = res.F
X = res.X</code>
            <sec id="cell-20-output-0-nb-4" specific-use="notebook-output">
              <preformat>==========================================================================================
n_gen  |  n_eval  | n_nds  |     cv_min    |     cv_avg    |      eps      |   indicator  
==========================================================================================
     1 |      150 |      2 |  0.000000E+00 |  0.7599240000 |             - |             -
     2 |      300 |      4 |  0.000000E+00 |  0.3333000000 |  0.2611076470 |             f
     3 |      450 |      8 |  0.000000E+00 |  0.000000E+00 |  0.1136363636 |         ideal
     4 |      600 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0234894009 |             f
     5 |      750 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0523076923 |         ideal
     6 |      900 |     14 |  0.000000E+00 |  0.000000E+00 |  0.0301783952 |             f
     7 |     1050 |     16 |  0.000000E+00 |  0.000000E+00 |  0.0124897083 |             f
     8 |     1200 |     18 |  0.000000E+00 |  0.000000E+00 |  0.0321204103 |         ideal
     9 |     1350 |     22 |  0.000000E+00 |  0.000000E+00 |  0.0193905856 |         ideal
    10 |     1500 |     26 |  0.000000E+00 |  0.000000E+00 |  0.0191481630 |         ideal
    11 |     1650 |     30 |  0.000000E+00 |  0.000000E+00 |  0.0040099729 |             f
    12 |     1800 |     26 |  0.000000E+00 |  0.000000E+00 |  0.0034813534 |         ideal
    13 |     1950 |     25 |  0.000000E+00 |  0.000000E+00 |  0.0071633836 |             f
    14 |     2100 |     23 |  0.000000E+00 |  0.000000E+00 |  0.0429418663 |         ideal
    15 |     2250 |     25 |  0.000000E+00 |  0.000000E+00 |  0.0063145650 |             f
    16 |     2400 |     28 |  0.000000E+00 |  0.000000E+00 |  0.0042492125 |             f
    17 |     2550 |     25 |  0.000000E+00 |  0.000000E+00 |  0.0034965035 |         ideal
    18 |     2700 |     29 |  0.000000E+00 |  0.000000E+00 |  0.0034843206 |         ideal
    19 |     2850 |     28 |  0.000000E+00 |  0.000000E+00 |  0.0070361322 |             f
    20 |     3000 |     29 |  0.000000E+00 |  0.000000E+00 |  0.0073361035 |             f
    21 |     3150 |     32 |  0.000000E+00 |  0.000000E+00 |  0.0020055342 |             f
    22 |     3300 |     33 |  0.000000E+00 |  0.000000E+00 |  0.0042798562 |             f
    23 |     3450 |     33 |  0.000000E+00 |  0.000000E+00 |  0.0096050462 |         ideal
    24 |     3600 |     31 |  0.000000E+00 |  0.000000E+00 |  0.0018718086 |             f
    25 |     3750 |     30 |  0.000000E+00 |  0.000000E+00 |  0.0079125236 |         ideal
    26 |     3900 |     31 |  0.000000E+00 |  0.000000E+00 |  0.0008866420 |             f
    27 |     4050 |     30 |  0.000000E+00 |  0.000000E+00 |  0.3811593976 |         nadir
    28 |     4200 |     31 |  0.000000E+00 |  0.000000E+00 |  0.0055677337 |             f
    29 |     4350 |     27 |  0.000000E+00 |  0.000000E+00 |  0.0082458783 |             f
    30 |     4500 |     26 |  0.000000E+00 |  0.000000E+00 |  0.0007305209 |             f</preformat>
            </sec>
          </sec>
          <sec id="cell-21-nb-4" specific-use="notebook-code">
            <code language="python">with Recorder(Video("all_loc_nsga2.mp4")) as rec:
    for entry in res.history:
        sc = Scatter(title="Generation: %s" % entry.n_gen)
        sc.add(entry.pop.get("F"))
        sc.do()
        rec.record()</code>
          </sec>
          <sec id="cell-22-nb-4" specific-use="notebook-code">
            <code language="python">from pymoo.decomposition.asf import ASF

weights = np.array([0.3, 0.7])
decomp = ASF()

I = decomp(res.F, weights).argmin()
print("Best regarding decomposition: Point %s - %s" % (I, res.F[I]))

plot = Scatter()
plot.add(res.F, color="blue", alpha=0.2, s=10)
plot.add(res.F[I], color="red", s=30)
plot.do()
# plot.apply(lambda ax: ax.arrow(0, 0, 0.5, 0.5, color='black',
#                                head_width=0.01, head_length=0.01, alpha=0.4))
plot.show()</code>
            <sec id="cell-22-output-0-nb-4" specific-use="notebook-output">
              <preformat>Best regarding decomposition: Point 18 - [-0.85758514 -2.04333036]</preformat>
            </sec>
            <sec id="cell-22-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-18-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-23-nb-4" specific-use="notebook-code">
            <code language="python">X = res.X[I]
tgt = MultiSkewNorm()
tgt.define_dp(
    np.array([X[0], X[1]]),
    np.array([[X[2], X[4]], [X[4], X[3]]]),
    np.array([X[5], X[6]]),
)
print(tgt.summary())
tgt.sample()
tgt.sspy_plot()</code>
            <sec id="cell-23-output-0-nb-4" specific-use="notebook-output">
              <preformat>Fitted from direct parameters.
Direct Parameters:
xi:    [0.926 0.478]
omega: [[0.31  0.164]
 [0.164 0.391]]
alpha: [ -4.344 -20.281]


None
None</preformat>
            </sec>
            <sec id="cell-23-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-19-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-24-nb-4" specific-use="notebook-content">
  </sec>
          <sec id="park-quality-optimization-nb-4">
            <title>Park Quality optimization</title>
          </sec>
          <sec id="cell-25-nb-4" specific-use="notebook-code">
            <code language="python"># initialize the thread pool and create the runner
mp = pathos.helpers.mp
n_process = 12
pool = mp.Pool(n_process)
runner = StarmapParallelization(pool.starmap)

termination = DefaultMultiObjectiveTermination(n_max_gen=50)

park_problem = MyProblem(
    data=park_data, ranking=park_quality.sort_index()["Rank"], elementwise_runner=runner
)

park_res = minimize(
    park_problem, algorithm, termination, seed=42, save_history=True, verbose=True
)

pool.close()

park_F = park_res.F
park_X = park_res.X</code>
            <sec id="cell-25-output-0-nb-4" specific-use="notebook-output">
              <preformat>==========================================================================================
n_gen  |  n_eval  | n_nds  |     cv_min    |     cv_avg    |      eps      |   indicator  
==========================================================================================
     1 |      150 |      2 |  0.000000E+00 |  0.7599240000 |             - |             -
     2 |      300 |      3 |  0.000000E+00 |  0.3266340000 |  0.2083333333 |         ideal
     3 |      450 |      4 |  0.000000E+00 |  0.000000E+00 |  0.1724137931 |         ideal
     4 |      600 |      4 |  0.000000E+00 |  0.000000E+00 |  0.1349915479 |         ideal
     5 |      750 |      7 |  0.000000E+00 |  0.000000E+00 |  0.0617948718 |         nadir
     6 |      900 |      7 |  0.000000E+00 |  0.000000E+00 |  0.0666666667 |         ideal
     7 |     1050 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0461936438 |         ideal
     8 |     1200 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0390004520 |         ideal
     9 |     1350 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0831211888 |         ideal
    10 |     1500 |      8 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    11 |     1650 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0197318786 |         ideal
    12 |     1800 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0325796344 |             f
    13 |     1950 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0266949931 |             f
    14 |     2100 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0090575853 |             f
    15 |     2250 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0093302382 |             f
    16 |     2400 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0072108409 |             f
    17 |     2550 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0250650673 |         ideal
    18 |     2700 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0140302920 |         ideal
    19 |     2850 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0119028705 |             f
    20 |     3000 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0230187900 |             f
    21 |     3150 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0118883533 |             f
    22 |     3300 |     12 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    23 |     3450 |     12 |  0.000000E+00 |  0.000000E+00 |  0.2727272727 |         nadir
    24 |     3600 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0176108038 |             f
    25 |     3750 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0454448758 |         ideal
    26 |     3900 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0041554413 |             f
    27 |     4050 |     13 |  0.000000E+00 |  0.000000E+00 |  0.0074008989 |             f
    28 |     4200 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0048426791 |         ideal
    29 |     4350 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    30 |     4500 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    31 |     4650 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0036648386 |         ideal
    32 |     4800 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0068492348 |             f
    33 |     4950 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0071204188 |         ideal
    34 |     5100 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0111274124 |             f
    35 |     5250 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0016256545 |             f
    36 |     5400 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0384615385 |         nadir
    37 |     5550 |      9 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    38 |     5700 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0029547424 |             f
    39 |     5850 |      9 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    40 |     6000 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0149538493 |         ideal
    41 |     6150 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0385940560 |         ideal
    42 |     6300 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0023919887 |             f
    43 |     6450 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0023919887 |             f
    44 |     6600 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0029497063 |             f
    45 |     6750 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0214584168 |             f
    46 |     6900 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0027018318 |             f
    47 |     7050 |     13 |  0.000000E+00 |  0.000000E+00 |  0.0095791708 |             f
    48 |     7200 |     13 |  0.000000E+00 |  0.000000E+00 |  0.0022022694 |             f
    49 |     7350 |     13 |  0.000000E+00 |  0.000000E+00 |  0.0022022694 |             f
    50 |     7500 |     12 |  0.000000E+00 |  0.000000E+00 |  0.0054986821 |             f</preformat>
            </sec>
          </sec>
          <sec id="cell-26-nb-4" specific-use="notebook-content">
            <p>note: looks like this requires more than 30 generations to
    converge</p>
          </sec>
          <sec id="cell-27-nb-4" specific-use="notebook-code">
            <code language="python">with Recorder(Video("park_nsga2.mp4")) as rec:
    for entry in park_res.history:
        sc = Scatter(title="Generation: %s" % entry.n_gen)
        sc.add(entry.pop.get("F"))
        sc.do()
        rec.record()</code>
          </sec>
          <sec id="cell-28-nb-4" specific-use="notebook-code">
            <code language="python">from pymoo.decomposition.asf import ASF

weights = np.array([0.32, 0.68])
decomp = ASF()

park_I = decomp(park_res.F, weights).argmin()
print("Best regarding decomposition: Point %s - %s" % (park_I, park_res.F[park_I]))

plot = Scatter()
plot.add(park_res.F, color="blue", alpha=0.2, s=10)
plot.add(park_res.F[park_I], color="red", s=30)
plot.do()
# plot.apply(lambda ax: ax.arrow(0, 0, 0.5, 0.5, color='black',
#                                head_width=0.01, head_length=0.01, alpha=0.4))
plot.show()</code>
            <sec id="cell-28-output-0-nb-4" specific-use="notebook-output">
              <preformat>Best regarding decomposition: Point 6 - [-0.9047619  -1.84109524]</preformat>
            </sec>
            <sec id="cell-28-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-22-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-29-nb-4" specific-use="notebook-code">
            <code language="python">park_X = park_res.X[park_I]
park_tgt = MultiSkewNorm()
park_tgt.define_dp(
    np.array([park_X[0], park_X[1]]),
    np.array([[park_X[2], park_X[4]], [park_X[4], park_X[3]]]),
    np.array([park_X[5], park_X[6]]),
)
print(park_tgt.summary())
park_tgt.sample()
park_tgt.sspy_plot()</code>
            <sec id="cell-29-output-0-nb-4" specific-use="notebook-output">
              <preformat>Fitted from direct parameters.
Direct Parameters:
xi:    [0.455 0.311]
omega: [[ 0.2   -0.046]
 [-0.046  0.184]]
alpha: [ 15.163 -20.098]


None
None</preformat>
            </sec>
            <sec id="cell-29-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-23-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-30-nb-4" specific-use="notebook-content">
  </sec>
          <sec id="not-park-optimization-nb-4">
            <title>Not Park Optimization</title>
          </sec>
          <sec id="cell-31-nb-4" specific-use="notebook-code">
            <code language="python"># initialize the thread pool and create the runner
mp = pathos.helpers.mp
n_process = 12
pool = mp.Pool(n_process)
runner = StarmapParallelization(pool.starmap)

np_problem = MyProblem(
    data=not_park_data, ranking=not_park_quality.sort_index()["Rank"], elementwise_runner=runner
)

np_res = minimize(
    np_problem, algorithm, termination, seed=42, save_history=True, verbose=True
)

pool.close()

np_F = np_res.F
np_X = np_res.X</code>
            <sec id="cell-31-output-0-nb-4" specific-use="notebook-output">
              <preformat>==========================================================================================
n_gen  |  n_eval  | n_nds  |     cv_min    |     cv_avg    |      eps      |   indicator  
==========================================================================================
     1 |      150 |      2 |  0.000000E+00 |  0.7599240000 |             - |             -
     2 |      300 |      2 |  0.000000E+00 |  0.3732960000 |  0.1666666667 |         ideal
     3 |      450 |      3 |  0.000000E+00 |  0.000000E+00 |  0.2500000000 |         ideal
     4 |      600 |      3 |  0.000000E+00 |  0.000000E+00 |  0.5333333333 |         ideal
     5 |      750 |      3 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
     6 |      900 |      3 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
     7 |     1050 |      5 |  0.000000E+00 |  0.000000E+00 |  0.0456974104 |         ideal
     8 |     1200 |      4 |  0.000000E+00 |  0.000000E+00 |  0.2092517852 |         ideal
     9 |     1350 |      6 |  0.000000E+00 |  0.000000E+00 |  0.0303030303 |         ideal
    10 |     1500 |      5 |  0.000000E+00 |  0.000000E+00 |  0.0242819144 |         ideal
    11 |     1650 |      7 |  0.000000E+00 |  0.000000E+00 |  0.0131282076 |         ideal
    12 |     1800 |      4 |  0.000000E+00 |  0.000000E+00 |  0.0046471797 |         ideal
    13 |     1950 |      5 |  0.000000E+00 |  0.000000E+00 |  0.0763836114 |             f
    14 |     2100 |      6 |  0.000000E+00 |  0.000000E+00 |  0.1043654561 |         ideal
    15 |     2250 |      6 |  0.000000E+00 |  0.000000E+00 |  0.0613017442 |         nadir
    16 |     2400 |      6 |  0.000000E+00 |  0.000000E+00 |  0.0431879764 |             f
    17 |     2550 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0135152449 |             f
    18 |     2700 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0499440259 |         ideal
    19 |     2850 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0006754146 |             f
    20 |     3000 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0033489808 |             f
    21 |     3150 |      8 |  0.000000E+00 |  0.000000E+00 |  0.0018489024 |             f
    22 |     3300 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0233511257 |             f
    23 |     3450 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0017474250 |             f
    24 |     3600 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0165124016 |             f
    25 |     3750 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0104329758 |             f
    26 |     3900 |     11 |  0.000000E+00 |  0.000000E+00 |  0.1418452855 |         nadir
    27 |     4050 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0006164013 |             f
    28 |     4200 |      9 |  0.000000E+00 |  0.000000E+00 |  2.2987105579 |         nadir
    29 |     4350 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0869565217 |         ideal
    30 |     4500 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    31 |     4650 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0095962685 |         ideal
    32 |     4800 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0031594620 |             f
    33 |     4950 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0023443739 |             f
    34 |     5100 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0064233203 |             f
    35 |     5250 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0048573903 |             f
    36 |     5400 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0152546413 |         ideal
    37 |     5550 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    38 |     5700 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0053986201 |             f
    39 |     5850 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0032274063 |             f
    40 |     6000 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0118563191 |             f
    41 |     6150 |     11 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    42 |     6300 |     11 |  0.000000E+00 |  0.000000E+00 |  0.0035765104 |             f
    43 |     6450 |     10 |  0.000000E+00 |  0.000000E+00 |  0.7533782215 |         nadir
    44 |     6600 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0284451061 |         ideal
    45 |     6750 |      9 |  0.000000E+00 |  0.000000E+00 |  0.0669515070 |         ideal
    46 |     6900 |     10 |  0.000000E+00 |  0.000000E+00 |  0.0526315789 |         ideal
    47 |     7050 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    48 |     7200 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    49 |     7350 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f
    50 |     7500 |     10 |  0.000000E+00 |  0.000000E+00 |  0.000000E+00 |             f</preformat>
            </sec>
          </sec>
          <sec id="cell-32-nb-4" specific-use="notebook-code">
            <code language="python">with Recorder(Video("not_park_nsga2.mp4")) as rec:
    for entry in np_res.history:
        sc = Scatter(title="Generation: %s" % entry.n_gen)
        sc.add(entry.pop.get("F"))
        sc.do()
        rec.record()</code>
          </sec>
          <sec id="cell-33-nb-4" specific-use="notebook-code">
            <code language="python">weights = np.array([0.32, 0.68])
decomp = ASF()

np_I = decomp(np_res.F, weights).argmin()
print("Best regarding decomposition: Point %s - %s" % (np_I, np_res.F[np_I]))

plot = Scatter()
plot.add(np_res.F, color="blue", alpha=0.2, s=10)
plot.add(np_res.F[np_I], color="red", s=30)
plot.do()
# plot.apply(lambda ax: ax.arrow(0, 0, 0.5, 0.5, color='black',
#                                head_width=0.01, head_length=0.01, alpha=0.4))
plot.show()</code>
            <sec id="cell-33-output-0-nb-4" specific-use="notebook-output">
              <preformat>Best regarding decomposition: Point 6 - [-0.93939394 -1.93503175]</preformat>
            </sec>
            <sec id="cell-33-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-26-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-34-nb-4" specific-use="notebook-code">
            <code language="python">np_X = np_res.X[np_I]
np_tgt = MultiSkewNorm()
np_tgt.define_dp(
    np.array([np_X[0], np_X[1]]),
    np.array([[np_X[2], np_X[4]], [np_X[4], np_X[3]]]),
    np.array([np_X[5], np_X[6]]),
)
print(np_tgt.summary())
np_tgt.sample()
np_tgt.sspy_plot()</code>
            <sec id="cell-34-output-0-nb-4" specific-use="notebook-output">
              <preformat>Fitted from direct parameters.
Direct Parameters:
xi:    [0.419 0.556]
omega: [[ 0.068 -0.057]
 [-0.057  0.387]]
alpha: [  1.929 -34.176]


None
None</preformat>
            </sec>
            <sec id="cell-34-output-1-nb-4" specific-use="notebook-output">
              <graphic mimetype="image" mime-subtype="png" xlink:href="TargetOptimization_files/figure-jats/cell-27-output-2.png"/>
            </sec>
          </sec>
          <sec id="cell-35-nb-4" specific-use="notebook-content">
  </sec>
        </sec>
        <sec id="for-loop-version-nb-4">
          <title>For loop version</title>
        </sec>
        <sec id="cell-36-nb-4" specific-use="notebook-code">
          <code language="python"># from pymoo.core.termination import NoTermination
# from pymoo.problems.static import StaticProblem
# from pymoo.core.evaluator import Evaluator
# from tqdm.autonotebook import tqdm

# problem = Problem(
#     n_var=7,
#     n_obj=2,
#     n_constr=0,
#     xl=np.array([-1, -1, 0, 0, -1, -5, -5]),
#     xu=np.array([1, 1, 0.25, 0.25, 1, 5, 5]),
#     evaluation_of="auto"
#     )

# # create the algorithm object
# algorithm = NSGA2(pop_size=20)

# # let the algorithm object never terminate and let the loop control it
# termination = NoTermination()

# # create an algorithm object that never terminates
# algorithm.setup(problem, termination=termination)

# # Fix the random seed manually
# np.random.seed(1)

# # until the algorithm has no terminated
# for n_gen in tqdm(range(20), desc='Pop', position=0):
#     # ask the algorithm for the next solution to be evaluated
#     pop = algorithm.ask()

#     # get the design space values of the algorithm
#     X = pop.get("X")

#     # implement your evaluation here
#     f1 = np.zeros(X.shape[0])
#     f2 = np.zeros(X.shape[0])

#     # for i in range(X.shape[0]):
#     #     omega = np.array([[X[i][2], X[i][4]], [X[i][4], X[i][3]]])


#     for i in tqdm(range(X.shape[0]), desc=f'Gen {n_gen}', position=1):
#         tgt = MultiSkewNorm()
#         try:
#             tgt.define_dp(
#                 np.array([X[i][0], X[i][1]]),
#                 np.array([[X[i][2], X[i][4]], [X[i][4], X[i][3]]]),
#                 np.array([X[i][5], X[i][6]]),
#             )
#         except AssertionError:
#             continue
#         tgt.sample()
#         r, wspi, spi_ranks, target = ot.target_success(tgt, quality.sort_index()['Rank'], data)

#         f1[i] =  -r[0]
#         f2[i] = -wspi / 100

#     F = np.column_stack([f1, f2])

#     static = StaticProblem(problem, F=F)
#     Evaluator().eval(static, pop)

#     # returned the evaluated individuals which have been evaluated or even modified
#     algorithm.tell(infills=pop)

#     # print the current generation
#     # print(f"Generation: {algorithm.n_gen}")
#     # print(tgt.summary())
#     # print()

#     # outer.update(1)

# # obtain the result objective from the algorithm
# res = algorithm.result()

# # calculate a hash to show that all executions end with the same result
# print("hash", res.F.sum())
  </code>
        </sec>
      </sec>
    </body>
    <back>
</back>
  </sub-article>
</article>
